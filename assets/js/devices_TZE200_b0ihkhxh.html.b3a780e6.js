"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[82124],{76794:(t,e,o)=>{o.r(e),o.d(e,{comp:()=>a,data:()=>h});var c=o(60362);const s={},a=(0,o(60654).A)(s,[["render",function(t,e){const o=(0,c.g2)("RouteLink");return(0,c.uX)(),(0,c.CE)("div",null,[e[7]||(e[7]=(0,c.Lk)("h1",{id:"orztech-tze200-b0ihkhxh",tabindex:"-1"},[(0,c.Lk)("a",{class:"header-anchor",href:"#orztech-tze200-b0ihkhxh"},[(0,c.Lk)("span",null,"Orztech _TZE200_b0ihkhxh")])],-1)),(0,c.Lk)("table",null,[e[6]||(e[6]=(0,c.Lk)("thead",null,[(0,c.Lk)("tr",null,[(0,c.Lk)("th"),(0,c.Lk)("th")])],-1)),(0,c.Lk)("tbody",null,[e[2]||(e[2]=(0,c.Lk)("tr",null,[(0,c.Lk)("td",null,"Model"),(0,c.Lk)("td",null,"_TZE200_b0ihkhxh")],-1)),(0,c.Lk)("tr",null,[e[1]||(e[1]=(0,c.Lk)("td",null,"Vendor",-1)),(0,c.Lk)("td",null,[(0,c.bF)(o,{to:"/supported-devices/#v=Orztech"},{default:(0,c.k6)(()=>[...e[0]||(e[0]=[(0,c.eW)("Orztech",-1)])]),_:1})])]),e[3]||(e[3]=(0,c.Lk)("tr",null,[(0,c.Lk)("td",null,"Description"),(0,c.Lk)("td",null,"1 gang touch wall switch")],-1)),e[4]||(e[4]=(0,c.Lk)("tr",null,[(0,c.Lk)("td",null,"Exposes"),(0,c.Lk)("td",null,"switch (state)")],-1)),e[5]||(e[5]=(0,c.Lk)("tr",null,[(0,c.Lk)("td",null,"Picture"),(0,c.Lk)("td",null,[(0,c.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/_TZE200_b0ihkhxh.png",alt:"Orztech _TZE200_b0ihkhxh"})])],-1))])]),e[8]||(e[8]=(0,c.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="switch-t1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-t1-endpoint"><span>Switch (t1 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_t1</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_t1&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_t1&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_t1&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state_t1&quot;: &quot;&quot;}</code>.</p><h3 id="switch-c1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-c1-endpoint"><span>Switch (c1 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_c1</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_c1&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_c1&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_c1&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state_c1&quot;: &quot;&quot;}</code>.</p><h3 id="switch-c2-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-c2-endpoint"><span>Switch (c2 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_c2</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_c2&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_c2&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_c2&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state_c2&quot;: &quot;&quot;}</code>.</p><h3 id="switch-c3-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-c3-endpoint"><span>Switch (c3 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_c3</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_c3&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_c3&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_c3&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state_c3&quot;: &quot;&quot;}</code>.</p>',9))])}]]),h=JSON.parse('{"path":"/devices/TZE200_b0ihkhxh.html","title":"Orztech _TZE200_b0ihkhxh control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Orztech _TZE200_b0ihkhxh control via MQTT","description":"Integrate your Orztech _TZE200_b0ihkhxh via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-05-01T17:59:09.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/_TZE200_b0ihkhxh.md"}')}}]);