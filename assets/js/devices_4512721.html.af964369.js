"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[29846],{96874:(e,t,n)=>{n.r(t),n.d(t,{comp:()=>o,data:()=>i});var a=n(60362);const s={},o=(0,n(60654).A)(s,[["render",function(e,t){const n=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[t[11]||(t[11]=(0,a.Lk)("h1",{id:"namron-4512721",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#namron-4512721"},[(0,a.Lk)("span",null,"Namron 4512721")])],-1)),(0,a.Lk)("table",null,[t[6]||(t[6]=(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th"),(0,a.Lk)("th")])],-1)),(0,a.Lk)("tbody",null,[t[2]||(t[2]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Model"),(0,a.Lk)("td",null,"4512721")],-1)),(0,a.Lk)("tr",null,[t[1]||(t[1]=(0,a.Lk)("td",null,"Vendor",-1)),(0,a.Lk)("td",null,[(0,a.bF)(n,{to:"/supported-devices/#v=Namron"},{default:(0,a.k6)(()=>[...t[0]||(t[0]=[(0,a.eW)("Namron",-1)])]),_:1})])]),t[3]||(t[3]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Description"),(0,a.Lk)("td",null,"Zigbee 4 channel switch K8 (black)")],-1)),t[4]||(t[4]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Exposes"),(0,a.Lk)("td",null,"battery, action")],-1)),t[5]||(t[5]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Picture"),(0,a.Lk)("td",null,[(0,a.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/4512721.png",alt:"Namron 4512721"})])],-1))])]),t[12]||(t[12]=(0,a.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><ol><li>Remove the remote from previous zigbee network if it has already been added to it, otherwise pairing will fail. Please refer to the part &quot;Factory Reset&quot;.</li><li>From your zigbee controller or hub interface, choose to add device or accessory and enter Pairing mode as instructed by the controller.</li><li>Press and hold down top two buttons (channel 1 ON and OFF) until LED indicator turns on.</li><li>Immediately short press the top right button (channel 1 OFF) to search nearby network, indicator flashes every 1 second, 20 seconds timeout if there is no network. Indicator will then blink 5 times quickly for successful pairing.</li></ol><h3 id="factory-reset" tabindex="-1"><a class="header-anchor" href="#factory-reset"><span>Factory Reset</span></a></h3><ol><li>Press and hold down top two buttons (channel 1 ON and OFF) until LED indicator turns on</li><li>Immediately short press the top left button (channel 1 ON) 5 times continuously, indicator flashes 3 times quickly to indicate successful reset.</li></ol><h2 id="ota-updates" tabindex="-1"><a class="header-anchor" href="#ota-updates"><span>OTA updates</span></a></h2>',6)),(0,a.Lk)("p",null,[t[8]||(t[8]=(0,a.eW)("This device supports OTA updates, for more information see ",-1)),(0,a.bF)(n,{to:"/guide/usage/ota_updates.html"},{default:(0,a.k6)(()=>[...t[7]||(t[7]=[(0,a.eW)("OTA updates",-1)])]),_:1}),t[9]||(t[9]=(0,a.eW)(".",-1))]),t[13]||(t[13]=(0,a.Lk)("h2",{id:"options",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#options"},[(0,a.Lk)("span",null,"Options")])],-1)),(0,a.Lk)("p",null,[(0,a.Lk)("em",null,[(0,a.bF)(n,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,a.k6)(()=>[...t[10]||(t[10]=[(0,a.eW)("How to use device type specific configuration",-1)])]),_:1})])]),t[14]||(t[14]=(0,a.Fv)('<ul><li><code>simulated_brightness</code>: Simulate a brightness value. If this device provides a brightness_move_up or brightness_move_down action it is possible to specify the update interval and delta. The action_brightness_delta indicates the delta for each interval. Example:</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">simulated_brightness</span><span class="token punctuation">:</span></span>\n<span class="line">  <span class="token key atrule">delta</span><span class="token punctuation">:</span> <span class="token number">20</span> <span class="token comment"># delta per interval, default = 20</span></span>\n<span class="line">  <span class="token key atrule">interval</span><span class="token punctuation">:</span> <span class="token number">200</span> <span class="token comment"># interval in milliseconds, default = 200</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %, can take up to 24 hours before reported. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>on_l1</code>, <code>off_l1</code>, <code>brightness_move_up_l1</code>, <code>brightness_move_down_l1</code>, <code>brightness_stop_l1</code>, <code>on_l2</code>, <code>off_l2</code>, <code>brightness_move_up_l2</code>, <code>brightness_move_down_l2</code>, <code>brightness_stop_l2</code>, <code>on_l3</code>, <code>off_l3</code>, <code>brightness_move_up_l3</code>, <code>brightness_move_down_l3</code>, <code>brightness_stop_l3</code>, <code>on_l4</code>, <code>off_l4</code>, <code>brightness_move_up_l4</code>, <code>brightness_move_down_l4</code>, <code>brightness_stop_l4</code>.</p>',7))])}]]),i=JSON.parse('{"path":"/devices/4512721.html","title":"Namron 4512721 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Namron 4512721 control via MQTT","description":"Integrate your Namron 4512721 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2020-08-11T22:17:44.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/4512721.md"}')}}]);