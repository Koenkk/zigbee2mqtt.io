"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[79078],{33111:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>d,data:()=>n});var a=t(60362);const c={},d=(0,t(60654).A)(c,[["render",function(e,o){const t=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[o[7]||(o[7]=(0,a.Lk)("h1",{id:"nous-e12",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#nous-e12"},[(0,a.Lk)("span",null,"NOUS E12")])],-1)),(0,a.Lk)("table",null,[o[6]||(o[6]=(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th"),(0,a.Lk)("th")])],-1)),(0,a.Lk)("tbody",null,[o[2]||(o[2]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Model"),(0,a.Lk)("td",null,"E12")],-1)),(0,a.Lk)("tr",null,[o[1]||(o[1]=(0,a.Lk)("td",null,"Vendor",-1)),(0,a.Lk)("td",null,[(0,a.bF)(t,{to:"/supported-devices/#v=NOUS"},{default:(0,a.k6)(()=>[...o[0]||(o[0]=[(0,a.eW)("NOUS",-1)])]),_:1})])]),o[3]||(o[3]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Description"),(0,a.Lk)("td",null,"Zigbee carbon monoxide (CO) sensor")],-1)),o[4]||(o[4]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Exposes"),(0,a.Lk)("td",null,"carbon_monoxide, carbon_monoxide_value, self_checking, checking_result, preheat, fault, lifecycle, battery")],-1)),o[5]||(o[5]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Picture"),(0,a.Lk)("td",null,[(0,a.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/E12.png",alt:"NOUS E12"})])],-1))])]),o[8]||(o[8]=(0,a.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="carbon-monoxide-binary" tabindex="-1"><a class="header-anchor" href="#carbon-monoxide-binary"><span>Carbon monoxide (binary)</span></a></h3><p>Indicates if CO (carbon monoxide) is detected. Value can be found in the published state on the <code>carbon_monoxide</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> carbon monoxide is ON, if <code>false</code> OFF.</p><h3 id="carbon-monoxide-value-numeric" tabindex="-1"><a class="header-anchor" href="#carbon-monoxide-value-numeric"><span>Carbon monoxide value (numeric)</span></a></h3><p>Current CO concentration. Value can be found in the published state on the <code>carbon_monoxide_value</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>ppm</code>.</p><h3 id="self-checking-binary" tabindex="-1"><a class="header-anchor" href="#self-checking-binary"><span>Self checking (binary)</span></a></h3><p>Triggers self-checking process. Value can be found in the published state on the <code>self_checking</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;self_checking&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;self_checking&quot;: NEW_VALUE}</code>. If value equals <code>true</code> self checking is ON, if <code>false</code> OFF.</p><h3 id="checking-result-enum" tabindex="-1"><a class="header-anchor" href="#checking-result-enum"><span>Checking result (enum)</span></a></h3><p>Result of self-checking. Value can be found in the published state on the <code>checking_result</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>ok</code>, <code>error</code>.</p><h3 id="preheat-binary" tabindex="-1"><a class="header-anchor" href="#preheat-binary"><span>Preheat (binary)</span></a></h3><p>Sensor preheating status. Value can be found in the published state on the <code>preheat</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;preheat&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;preheat&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> preheat is ON, if <code>OFF</code> OFF.</p><h3 id="fault-binary" tabindex="-1"><a class="header-anchor" href="#fault-binary"><span>Fault (binary)</span></a></h3><p>Sensor fault indicator. Value can be found in the published state on the <code>fault</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;fault&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;fault&quot;: NEW_VALUE}</code>. If value equals <code>true</code> fault is ON, if <code>false</code> OFF.</p><h3 id="lifecycle-numeric" tabindex="-1"><a class="header-anchor" href="#lifecycle-numeric"><span>Lifecycle (numeric)</span></a></h3><p>Sensor service life or usage counter. Value can be found in the published state on the <code>lifecycle</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>days</code>.</p><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Battery level in %. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p>',17))])}]]),n=JSON.parse('{"path":"/devices/E12.html","title":"NOUS E12 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"NOUS E12 control via MQTT","description":"Integrate your NOUS E12 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-10-31T19:12:27.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/E12.md"}')}}]);