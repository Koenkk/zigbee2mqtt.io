"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[38785],{12042:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>r,data:()=>n});var i=a(60362);const o={},r=(0,a(60654).A)(o,[["render",function(e,t){const a=(0,i.g2)("RouteLink");return(0,i.uX)(),(0,i.CE)("div",null,[t[7]||(t[7]=(0,i.Lk)("h1",{id:"custom-devices-diy-cc2530-router",tabindex:"-1"},[(0,i.Lk)("a",{class:"header-anchor",href:"#custom-devices-diy-cc2530-router"},[(0,i.Lk)("span",null,"Custom devices (DiY) CC2530.ROUTER")])],-1)),(0,i.Lk)("table",null,[t[6]||(t[6]=(0,i.Lk)("thead",null,[(0,i.Lk)("tr",null,[(0,i.Lk)("th"),(0,i.Lk)("th")])],-1)),(0,i.Lk)("tbody",null,[t[2]||(t[2]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Model"),(0,i.Lk)("td",null,"CC2530.ROUTER")],-1)),(0,i.Lk)("tr",null,[t[1]||(t[1]=(0,i.Lk)("td",null,"Vendor",-1)),(0,i.Lk)("td",null,[(0,i.bF)(a,{to:"/supported-devices/#v=Custom%20devices%20(DiY)"},{default:(0,i.k6)(()=>[...t[0]||(t[0]=[(0,i.eW)("Custom devices (DiY)",-1)])]),_:1})])]),t[3]||(t[3]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Description"),(0,i.Lk)("td",null,"CC2530 router")],-1)),t[4]||(t[4]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Exposes"),(0,i.Lk)("td",null,"led")],-1)),t[5]||(t[5]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Picture"),(0,i.Lk)("td",null,[(0,i.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/CC2530.ROUTER.png",alt:"Custom devices (DiY) CC2530.ROUTER"})])],-1))])]),t[8]||(t[8]=(0,i.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><p><a href="http://ptvo.info/cc2530-based-zigbee-coordinator-and-router-112/" target="_blank" rel="noopener noreferrer">CC2530 router</a></p><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><p>At first boot it will automatically be in pairing mode and join your network. To reset it into pairing mode power-cycle it three times as follows:</p><ol><li>power on</li><li>wait 2sec</li><li>power off</li><li>repeat above steps 2 further times</li><li>power on and wait for it to join your network</li></ol><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="led-binary" tabindex="-1"><a class="header-anchor" href="#led-binary"><span>Led (binary)</span></a></h3><p>Value can be found in the published state on the <code>led</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> led is ON, if <code>false</code> OFF.</p>',8))])}]]),n=JSON.parse('{"path":"/devices/CC2530.ROUTER.html","title":"Custom devices (DiY) CC2530.ROUTER control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Custom devices (DiY) CC2530.ROUTER control via MQTT","description":"Integrate your Custom devices (DiY) CC2530.ROUTER via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2019-07-22T20:08:17.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/CC2530.ROUTER.md"}')}}]);