"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[55173],{36760:(e,t,o)=>{o.r(t),o.d(t,{comp:()=>r,data:()=>s});var a=o(60362);const c={},r=(0,o(60654).A)(c,[["render",function(e,t){const o=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[t[8]||(t[8]=(0,a.Lk)("h1",{id:"nous-d5z",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#nous-d5z"},[(0,a.Lk)("span",null,"NOUS D5Z")])],-1)),(0,a.Lk)("table",null,[t[6]||(t[6]=(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th"),(0,a.Lk)("th")])],-1)),(0,a.Lk)("tbody",null,[t[2]||(t[2]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Model"),(0,a.Lk)("td",null,"D5Z")],-1)),(0,a.Lk)("tr",null,[t[1]||(t[1]=(0,a.Lk)("td",null,"Vendor",-1)),(0,a.Lk)("td",null,[(0,a.bF)(o,{to:"/supported-devices/#v=NOUS"},{default:(0,a.k6)(()=>[...t[0]||(t[0]=[(0,a.eW)("NOUS",-1)])]),_:1})])]),t[3]||(t[3]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Description"),(0,a.Lk)("td",null,"Zigbee smart energy meter with leakage and prepayment")],-1)),t[4]||(t[4]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Exposes"),(0,a.Lk)("td",null,"energy, produced_energy, current, temperature, leakage_current, switch (state), reclosing_enable, timer, cycle_schedule, clear_energy, switch_prepayment, balance_energy, charge_energy, fault, status, reclose_recover_seconds, power_on_delay, overcurrent_threshold_time, lost_flow_threshold_time, relay_status_on_power_on, alarm_set_1, alarm_set_2, alarm_set_3")],-1)),t[5]||(t[5]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Picture"),(0,a.Lk)("td",null,[(0,a.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/D5Z.png",alt:"NOUS D5Z"})])],-1))])]),t[9]||(t[9]=(0,a.Lk)("h2",{id:"options",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#options"},[(0,a.Lk)("span",null,"Options")])],-1)),(0,a.Lk)("p",null,[(0,a.Lk)("em",null,[(0,a.bF)(o,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,a.k6)(()=>[...t[7]||(t[7]=[(0,a.eW)("How to use device type specific configuration",-1)])]),_:1})])]),t[10]||(t[10]=(0,a.Fv)('<ul><li><p><code>energy_calibration</code>: Calibrates the energy value (percentual offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>energy_precision</code>: Number of digits after decimal point for energy, takes into effect on next report of device. This option can only decrease the precision, not increase it. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li><li><p><code>current_calibration</code>: Calibrates the current value (percentual offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>current_precision</code>: Number of digits after decimal point for current, takes into effect on next report of device. This option can only decrease the precision, not increase it. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li><li><p><code>temperature_calibration</code>: Calibrates the temperature value (absolute offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>temperature_precision</code>: Number of digits after decimal point for temperature, takes into effect on next report of device. This option can only decrease the precision, not increase it. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="energy-numeric" tabindex="-1"><a class="header-anchor" href="#energy-numeric"><span>Energy (numeric)</span></a></h3><p>Sum of consumed energy. Value can be found in the published state on the <code>energy</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>kWh</code>.</p><h3 id="produced-energy-numeric" tabindex="-1"><a class="header-anchor" href="#produced-energy-numeric"><span>Produced energy (numeric)</span></a></h3><p>Sum of produced energy. Value can be found in the published state on the <code>produced_energy</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>kWh</code>.</p><h3 id="current-numeric" tabindex="-1"><a class="header-anchor" href="#current-numeric"><span>Current (numeric)</span></a></h3><p>Instantaneous measured electrical current. Value can be found in the published state on the <code>current</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>A</code>.</p><h3 id="temperature-numeric" tabindex="-1"><a class="header-anchor" href="#temperature-numeric"><span>Temperature (numeric)</span></a></h3><p>Measured temperature value. Value can be found in the published state on the <code>temperature</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>Â°C</code>.</p><h3 id="leakage-current-numeric" tabindex="-1"><a class="header-anchor" href="#leakage-current-numeric"><span>Leakage current (numeric)</span></a></h3><p>Leakage current. Value can be found in the published state on the <code>leakage_current</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>mA</code>.</p><h3 id="switch" tabindex="-1"><a class="header-anchor" href="#switch"><span>Switch</span></a></h3><p>The current state of this switch is in the published state under the <code>state</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state&quot;: &quot;ON&quot;}</code>, <code>{&quot;state&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state&quot;: &quot;&quot;}</code>.</p><h3 id="reclosing-enable-binary" tabindex="-1"><a class="header-anchor" href="#reclosing-enable-binary"><span>Reclosing enable (binary)</span></a></h3><p>Reclosing enable. Value can be found in the published state on the <code>reclosing_enable</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;reclosing_enable&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;reclosing_enable&quot;: NEW_VALUE}</code>. If value equals <code>true</code> reclosing enable is ON, if <code>false</code> OFF.</p><h3 id="timer-numeric" tabindex="-1"><a class="header-anchor" href="#timer-numeric"><span>Timer (numeric)</span></a></h3><p>Timer (schedule control in seconds). Value can be found in the published state on the <code>timer</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;timer&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;timer&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>86400</code>.</p><h3 id="cycle-schedule-text" tabindex="-1"><a class="header-anchor" href="#cycle-schedule-text"><span>Cycle schedule (text)</span></a></h3><p>Cycle schedule configuration (JSON string). Value can be found in the published state on the <code>cycle_schedule</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;cycle_schedule&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;cycle_schedule&quot;: NEW_VALUE}</code>.</p><h3 id="clear-energy-binary" tabindex="-1"><a class="header-anchor" href="#clear-energy-binary"><span>Clear energy (binary)</span></a></h3><p>Clear accumulated forward and reverse energy. Value will <strong>not</strong> be published in the state. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;clear_energy&quot;: NEW_VALUE}</code>. If value equals <code>true</code> clear energy is ON, if <code>false</code> OFF.</p><h3 id="switch-prepayment-binary" tabindex="-1"><a class="header-anchor" href="#switch-prepayment-binary"><span>Switch prepayment (binary)</span></a></h3><p>Switch prepayment mode ON/OFF. Value can be found in the published state on the <code>switch_prepayment</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_prepayment&quot;: NEW_VALUE}</code>. If value equals <code>true</code> switch prepayment is ON, if <code>false</code> OFF.</p><h3 id="balance-energy-numeric" tabindex="-1"><a class="header-anchor" href="#balance-energy-numeric"><span>Balance energy (numeric)</span></a></h3><p>Remaining energy balance for prepayment. Value can be found in the published state on the <code>balance_energy</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>kWh</code>.</p><h3 id="charge-energy-numeric" tabindex="-1"><a class="header-anchor" href="#charge-energy-numeric"><span>Charge energy (numeric)</span></a></h3><p>Last charged energy amount. Value can be found in the published state on the <code>charge_energy</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>kWh</code>.</p><h3 id="fault-binary" tabindex="-1"><a class="header-anchor" href="#fault-binary"><span>Fault (binary)</span></a></h3><p>General fault detected. Value can be found in the published state on the <code>fault</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> fault is ON, if <code>false</code> OFF.</p><h3 id="status-text" tabindex="-1"><a class="header-anchor" href="#status-text"><span>Status (text)</span></a></h3><p>Detailed status information (e.g., fault codes). Value can be found in the published state on the <code>status</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value.</p><h3 id="reclose-recover-seconds-numeric" tabindex="-1"><a class="header-anchor" href="#reclose-recover-seconds-numeric"><span>Reclose recover seconds (numeric)</span></a></h3><p>Time for auto reclosing recovery. Value can be found in the published state on the <code>reclose_recover_seconds</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>s</code>.</p><h3 id="power-on-delay-numeric" tabindex="-1"><a class="header-anchor" href="#power-on-delay-numeric"><span>Power on delay (numeric)</span></a></h3><p>Power-on delay time. Value can be found in the published state on the <code>power_on_delay</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>s</code>.</p><h3 id="overcurrent-threshold-time-numeric" tabindex="-1"><a class="header-anchor" href="#overcurrent-threshold-time-numeric"><span>Overcurrent threshold time (numeric)</span></a></h3><p>Overcurrent event threshold time. Value can be found in the published state on the <code>overcurrent_threshold_time</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>s</code>.</p><h3 id="lost-flow-threshold-time-numeric" tabindex="-1"><a class="header-anchor" href="#lost-flow-threshold-time-numeric"><span>Lost flow threshold time (numeric)</span></a></h3><p>Lost flow event threshold time. Value can be found in the published state on the <code>lost_flow_threshold_time</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>s</code>.</p><h3 id="relay-status-on-power-on-binary" tabindex="-1"><a class="header-anchor" href="#relay-status-on-power-on-binary"><span>Relay status on power on (binary)</span></a></h3><p>Relay status after power on (true=ON). Value can be found in the published state on the <code>relay_status_on_power_on</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> relay status on power on is ON, if <code>false</code> OFF.</p><h3 id="alarm-set-1-text" tabindex="-1"><a class="header-anchor" href="#alarm-set-1-text"><span>Alarm set 1 (text)</span></a></h3><p>Alarm set 1 configuration. Value can be found in the published state on the <code>alarm_set_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;alarm_set_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;alarm_set_1&quot;: NEW_VALUE}</code>.</p><h3 id="alarm-set-2-text" tabindex="-1"><a class="header-anchor" href="#alarm-set-2-text"><span>Alarm set 2 (text)</span></a></h3><p>Alarm set 2 configuration. Value can be found in the published state on the <code>alarm_set_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;alarm_set_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;alarm_set_2&quot;: NEW_VALUE}</code>.</p><h3 id="alarm-set-3-text" tabindex="-1"><a class="header-anchor" href="#alarm-set-3-text"><span>Alarm set 3 (text)</span></a></h3><p>Alarm set 3 configuration. Value can be found in the published state on the <code>alarm_set_3</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;alarm_set_3&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;alarm_set_3&quot;: NEW_VALUE}</code>.</p>',48))])}]]),s=JSON.parse('{"path":"/devices/D5Z.html","title":"NOUS D5Z control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"NOUS D5Z control via MQTT","description":"Integrate your NOUS D5Z via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-10-31T19:12:27.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/D5Z.md"}')}}]);