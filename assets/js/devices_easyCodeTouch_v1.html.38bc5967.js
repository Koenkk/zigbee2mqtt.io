"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[50286],{47649:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>d,data:()=>a});var s=t(60362);const c={},d=(0,t(60654).A)(c,[["render",function(e,o){const t=(0,s.g2)("RouteLink");return(0,s.uX)(),(0,s.CE)("div",null,[o[7]||(o[7]=(0,s.Lk)("h1",{id:"onesti-products-as-easycodetouch-v1",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#onesti-products-as-easycodetouch-v1"},[(0,s.Lk)("span",null,"Onesti Products AS easyCodeTouch_v1")])],-1)),(0,s.Lk)("table",null,[o[6]||(o[6]=(0,s.Lk)("thead",null,[(0,s.Lk)("tr",null,[(0,s.Lk)("th"),(0,s.Lk)("th")])],-1)),(0,s.Lk)("tbody",null,[o[2]||(o[2]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Model"),(0,s.Lk)("td",null,"easyCodeTouch_v1")],-1)),(0,s.Lk)("tr",null,[o[1]||(o[1]=(0,s.Lk)("td",null,"Vendor",-1)),(0,s.Lk)("td",null,[(0,s.bF)(t,{to:"/supported-devices/#v=Onesti%20Products%20AS"},{default:(0,s.k6)(()=>[...o[0]||(o[0]=[(0,s.eW)("Onesti Products AS",-1)])]),_:1})])]),o[3]||(o[3]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Description"),(0,s.Lk)("td",null,"Zigbee module for EasyAccess code touch series")],-1)),o[4]||(o[4]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Exposes"),(0,s.Lk)("td",null,"lock (state, lock_state), battery, sound_volume, last_unlock_source, last_unlock_user, last_lock_source, last_lock_user, last_used_pin_code, auto_relock, pin_code, last_successful_pincode_clear, last_successful_pincode_save")],-1)),o[5]||(o[5]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Picture"),(0,s.Lk)("td",null,[(0,s.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/easyCodeTouch_v1.png",alt:"Onesti Products AS easyCodeTouch_v1"})])],-1))])]),o[8]||(o[8]=(0,s.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="lock" tabindex="-1"><a class="header-anchor" href="#lock"><span>Lock</span></a></h3><p>The current state of this lock is in the published state under the <code>state</code> property (value is <code>LOCK</code> or <code>UNLOCK</code>). To control this lock publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state&quot;: &quot;LOCK&quot;}</code> or <code>{&quot;state&quot;: &quot;UNLOCK&quot;}</code>. To read the current state of this lock publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state&quot;: &quot;&quot;}</code>. This lock exposes a lock state which can be found in the published state under the <code>lock_state</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>not_fully_locked</code>, <code>locked</code>, <code>unlocked</code>.</p><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %, can take up to 24 hours before reported. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="sound-volume-enum" tabindex="-1"><a class="header-anchor" href="#sound-volume-enum"><span>Sound volume (enum)</span></a></h3><p>Sound volume of the lock. Value can be found in the published state on the <code>sound_volume</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;sound_volume&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;sound_volume&quot;: NEW_VALUE}</code>. The possible values are: <code>silent_mode</code>, <code>low_volume</code>, <code>high_volume</code>.</p><h3 id="last-unlock-source-enum" tabindex="-1"><a class="header-anchor" href="#last-unlock-source-enum"><span>Last unlock source (enum)</span></a></h3><p>Last unlock source. Value can be found in the published state on the <code>last_unlock_source</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>zigbee</code>, <code>keypad</code>, <code>fingerprintsensor</code>, <code>rfid</code>, <code>self</code>, <code>unknown</code>.</p><h3 id="last-unlock-user-text" tabindex="-1"><a class="header-anchor" href="#last-unlock-user-text"><span>Last unlock user (text)</span></a></h3><p>Last unlock user. Value can be found in the published state on the <code>last_unlock_user</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value.</p><h3 id="last-lock-source-enum" tabindex="-1"><a class="header-anchor" href="#last-lock-source-enum"><span>Last lock source (enum)</span></a></h3><p>Last lock source. Value can be found in the published state on the <code>last_lock_source</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>zigbee</code>, <code>keypad</code>, <code>fingerprintsensor</code>, <code>rfid</code>, <code>self</code>, <code>unknown</code>.</p><h3 id="last-lock-user-text" tabindex="-1"><a class="header-anchor" href="#last-lock-user-text"><span>Last lock user (text)</span></a></h3><p>Last lock user. Value can be found in the published state on the <code>last_lock_user</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value.</p><h3 id="last-used-pin-code-text" tabindex="-1"><a class="header-anchor" href="#last-used-pin-code-text"><span>Last used pin code (text)</span></a></h3><p>Last used pin code. Value can be found in the published state on the <code>last_used_pin_code</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value.</p><h3 id="auto-relock-binary" tabindex="-1"><a class="header-anchor" href="#auto-relock-binary"><span>Auto relock (binary)</span></a></h3><p>Auto relock after 7 seconds.. Value can be found in the published state on the <code>auto_relock</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;auto_relock&quot;: NEW_VALUE}</code>. If value equals <code>true</code> auto relock is ON, if <code>false</code> OFF.</p><h3 id="pin-code-composite" tabindex="-1"><a class="header-anchor" href="#pin-code-composite"><span>Pin code (composite)</span></a></h3><p>Can be set by publishing to <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;pin_code&quot;: {&quot;user&quot;: VALUE, &quot;user_type&quot;: VALUE, &quot;user_enabled&quot;: VALUE, &quot;pin_code&quot;: VALUE}}</code> To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;pin_code&quot;: &quot;&quot;}</code>.</p><ul><li><code>user</code> (numeric): User ID to set or clear the pincode for</li><li><code>user_type</code> (enum): Type of user, unrestricted: owner (default), (year|week)_day_schedule: user has ability to open lock based on specific time period, master: user has ability to both program and operate the door lock, non_access: user is recognized by the lock but does not have the ability to open the lock allowed values: <code>unrestricted</code>, <code>year_day_schedule</code>, <code>week_day_schedule</code>, <code>master</code>, <code>non_access</code></li><li><code>user_enabled</code> (binary): Whether the user is enabled/disabled allowed values: <code>true</code> or <code>false</code></li><li><code>pin_code</code> (numeric): Pincode to set, set pincode to null to clear</li></ul><h3 id="last-successful-pincode-clear-text" tabindex="-1"><a class="header-anchor" href="#last-successful-pincode-clear-text"><span>Last successful pincode clear (text)</span></a></h3><p>Last deleted Pincode. Value can be found in the published state on the <code>last_successful_pincode_clear</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value.</p><h3 id="last-successful-pincode-save-text" tabindex="-1"><a class="header-anchor" href="#last-successful-pincode-save-text"><span>Last successful pincode save (text)</span></a></h3><p>Last saved Pincode. Value can be found in the published state on the <code>last_successful_pincode_save</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value.</p>',26))])}]]),a=JSON.parse('{"path":"/devices/easyCodeTouch_v1.html","title":"Onesti Products AS easyCodeTouch_v1 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Onesti Products AS easyCodeTouch_v1 control via MQTT","description":"Integrate your Onesti Products AS easyCodeTouch_v1 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2021-10-30T12:58:50.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/easyCodeTouch_v1.md"}')}}]);