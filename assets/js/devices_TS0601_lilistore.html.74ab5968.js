"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[81458],{93136:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>d,data:()=>a});var i=t(60362);const s={},d=(0,t(60654).A)(s,[["render",function(e,o){const t=(0,i.g2)("RouteLink");return(0,i.uX)(),(0,i.CE)("div",null,[o[8]||(o[8]=(0,i.Lk)("h1",{id:"lilistore-ts0601-lilistore",tabindex:"-1"},[(0,i.Lk)("a",{class:"header-anchor",href:"#lilistore-ts0601-lilistore"},[(0,i.Lk)("span",null,"Lilistore TS0601_lilistore")])],-1)),(0,i.Lk)("table",null,[o[6]||(o[6]=(0,i.Lk)("thead",null,[(0,i.Lk)("tr",null,[(0,i.Lk)("th"),(0,i.Lk)("th")])],-1)),(0,i.Lk)("tbody",null,[o[2]||(o[2]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Model"),(0,i.Lk)("td",null,"TS0601_lilistore")],-1)),(0,i.Lk)("tr",null,[o[1]||(o[1]=(0,i.Lk)("td",null,"Vendor",-1)),(0,i.Lk)("td",null,[(0,i.bF)(t,{to:"/supported-devices/#v=Lilistore"},{default:(0,i.k6)(()=>[...o[0]||(o[0]=[(0,i.eW)("Lilistore",-1)])]),_:1})])]),o[3]||(o[3]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Description"),(0,i.Lk)("td",null,"Cover motor")],-1)),o[4]||(o[4]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Exposes"),(0,i.Lk)("td",null,"cover (state, position), reverse_direction, motor_fault, upper_stroke_limit, middle_stroke_limit, lower_stroke_limit, motor_working_mode")],-1)),o[5]||(o[5]=(0,i.Lk)("tr",null,[(0,i.Lk)("td",null,"Picture"),(0,i.Lk)("td",null,[(0,i.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/TS0601_lilistore.png",alt:"Lilistore TS0601_lilistore"})])],-1))])]),o[9]||(o[9]=(0,i.Lk)("h2",{id:"options",tabindex:"-1"},[(0,i.Lk)("a",{class:"header-anchor",href:"#options"},[(0,i.Lk)("span",null,"Options")])],-1)),(0,i.Lk)("p",null,[(0,i.Lk)("em",null,[(0,i.bF)(t,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,i.k6)(()=>[...o[7]||(o[7]=[(0,i.eW)("How to use device type specific configuration",-1)])]),_:1})])]),o[10]||(o[10]=(0,i.Fv)('<ul><li><code>invert_cover</code>: Inverts the cover position, false: open=100,close=0, true: open=0,close=100 (default false). The value must be <code>true</code> or <code>false</code></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="cover" tabindex="-1"><a class="header-anchor" href="#cover"><span>Cover</span></a></h3><p>The current state of this cover is in the published state under the <code>state</code> property (value is <code>OPEN</code> or <code>CLOSE</code>). To control this cover publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state&quot;: &quot;OPEN&quot;}</code>, <code>{&quot;state&quot;: &quot;CLOSE&quot;}</code>, <code>{&quot;state&quot;: &quot;STOP&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value. To change the position publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;position&quot;: VALUE}</code> where <code>VALUE</code> is a number between <code>0</code> and <code>100</code>.</p><h3 id="reverse-direction-enum" tabindex="-1"><a class="header-anchor" href="#reverse-direction-enum"><span>Reverse direction (enum)</span></a></h3><p>Reverse the motor direction. Value can be found in the published state on the <code>reverse_direction</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;reverse_direction&quot;: NEW_VALUE}</code>. The possible values are: <code>forward</code>, <code>back</code>.</p><h3 id="motor-fault-binary" tabindex="-1"><a class="header-anchor" href="#motor-fault-binary"><span>Motor fault (binary)</span></a></h3><p>Motor Fault. Value can be found in the published state on the <code>motor_fault</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> motor fault is ON, if <code>false</code> OFF.</p><h3 id="upper-stroke-limit-enum" tabindex="-1"><a class="header-anchor" href="#upper-stroke-limit-enum"><span>Upper stroke limit (enum)</span></a></h3><p>Set or Reset the upper stroke limit. Value can be found in the published state on the <code>upper_stroke_limit</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;upper_stroke_limit&quot;: NEW_VALUE}</code>. The possible values are: <code>SET</code>, <code>RESET</code>.</p><h3 id="middle-stroke-limit-enum" tabindex="-1"><a class="header-anchor" href="#middle-stroke-limit-enum"><span>Middle stroke limit (enum)</span></a></h3><p>Set or Reset the middle stroke limit. Value can be found in the published state on the <code>middle_stroke_limit</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;middle_stroke_limit&quot;: NEW_VALUE}</code>. The possible values are: <code>SET</code>, <code>RESET</code>.</p><h3 id="lower-stroke-limit-enum" tabindex="-1"><a class="header-anchor" href="#lower-stroke-limit-enum"><span>Lower stroke limit (enum)</span></a></h3><p>Set or Reset the lower stroke limit. Value can be found in the published state on the <code>lower_stroke_limit</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;lower_stroke_limit&quot;: NEW_VALUE}</code>. The possible values are: <code>SET</code>, <code>RESET</code>.</p><h3 id="motor-working-mode-enum" tabindex="-1"><a class="header-anchor" href="#motor-working-mode-enum"><span>Motor working mode (enum)</span></a></h3><p>Motor operating mode. Value can be found in the published state on the <code>motor_working_mode</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;motor_working_mode&quot;: NEW_VALUE}</code>. The possible values are: <code>continuous</code>, <code>intermittently</code>.</p>',16))])}]]),a=JSON.parse('{"path":"/devices/TS0601_lilistore.html","title":"Lilistore TS0601_lilistore control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Lilistore TS0601_lilistore control via MQTT","description":"Integrate your Lilistore TS0601_lilistore via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2024-01-31T19:37:46.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/TS0601_lilistore.md"}')}}]);