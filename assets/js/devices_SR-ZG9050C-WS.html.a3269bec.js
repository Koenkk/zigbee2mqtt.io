"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[45507],{33e3:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>d,data:()=>l});var r=t(60362);const o={},d=(0,t(60654).A)(o,[["render",function(e,a){const t=(0,r.g2)("RouteLink");return(0,r.uX)(),(0,r.CE)("div",null,[a[7]||(a[7]=(0,r.Lk)("h1",{id:"sunricher-sr-zg9050c-ws",tabindex:"-1"},[(0,r.Lk)("a",{class:"header-anchor",href:"#sunricher-sr-zg9050c-ws"},[(0,r.Lk)("span",null,"Sunricher SR-ZG9050C-WS")])],-1)),(0,r.Lk)("table",null,[a[6]||(a[6]=(0,r.Lk)("thead",null,[(0,r.Lk)("tr",null,[(0,r.Lk)("th"),(0,r.Lk)("th")])],-1)),(0,r.Lk)("tbody",null,[a[2]||(a[2]=(0,r.Lk)("tr",null,[(0,r.Lk)("td",null,"Model"),(0,r.Lk)("td",null,"SR-ZG9050C-WS")],-1)),(0,r.Lk)("tr",null,[a[1]||(a[1]=(0,r.Lk)("td",null,"Vendor",-1)),(0,r.Lk)("td",null,[(0,r.bF)(t,{to:"/supported-devices/#v=Sunricher"},{default:(0,r.k6)(()=>[...a[0]||(a[0]=[(0,r.eW)("Sunricher",-1)])]),_:1})])]),a[3]||(a[3]=(0,r.Lk)("tr",null,[(0,r.Lk)("td",null,"Description"),(0,r.Lk)("td",null,"Smart water leakage sensor")],-1)),a[4]||(a[4]=(0,r.Lk)("tr",null,[(0,r.Lk)("td",null,"Exposes"),(0,r.Lk)("td",null,"battery, water_leak_alarm_1, water_leak_alarm_2, tamper, battery_low")],-1)),a[5]||(a[5]=(0,r.Lk)("tr",null,[(0,r.Lk)("td",null,"Picture"),(0,r.Lk)("td",null,[(0,r.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/SR-ZG9050C-WS.png",alt:"Sunricher SR-ZG9050C-WS"})])],-1))])]),a[8]||(a[8]=(0,r.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;battery&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="water-leak-alarm-1-binary" tabindex="-1"><a class="header-anchor" href="#water-leak-alarm-1-binary"><span>Water leak alarm 1 (binary)</span></a></h3><p>Indicates whether the device detected a water leak (alarm_1). Value can be found in the published state on the <code>water_leak_alarm_1</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> water leak alarm 1 is ON, if <code>false</code> OFF.</p><h3 id="water-leak-alarm-2-binary" tabindex="-1"><a class="header-anchor" href="#water-leak-alarm-2-binary"><span>Water leak alarm 2 (binary)</span></a></h3><p>Indicates whether the device detected a water leak (alarm_2). Value can be found in the published state on the <code>water_leak_alarm_2</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> water leak alarm 2 is ON, if <code>false</code> OFF.</p><h3 id="tamper-binary" tabindex="-1"><a class="header-anchor" href="#tamper-binary"><span>Tamper (binary)</span></a></h3><p>Indicates whether the device is tampered. Value can be found in the published state on the <code>tamper</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> tamper is ON, if <code>false</code> OFF.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Indicates whether the battery of the device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p>',11))])}]]),l=JSON.parse('{"path":"/devices/SR-ZG9050C-WS.html","title":"Sunricher SR-ZG9050C-WS control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Sunricher SR-ZG9050C-WS control via MQTT","description":"Integrate your Sunricher SR-ZG9050C-WS via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-02-01T20:02:57.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/SR-ZG9050C-WS.md"}')}}]);