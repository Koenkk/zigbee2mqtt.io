"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[58989],{75535:(e,t,o)=>{o.r(t),o.d(t,{comp:()=>c,data:()=>a});var s=o(60362);const d={},c=(0,o(60654).A)(d,[["render",function(e,t){const o=(0,s.g2)("RouteLink");return(0,s.uX)(),(0,s.CE)("div",null,[t[7]||(t[7]=(0,s.Lk)("h1",{id:"zsviot-pn16",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#zsviot-pn16"},[(0,s.Lk)("span",null,"ZSVIOT PN16")])],-1)),(0,s.Lk)("table",null,[t[6]||(t[6]=(0,s.Lk)("thead",null,[(0,s.Lk)("tr",null,[(0,s.Lk)("th"),(0,s.Lk)("th")])],-1)),(0,s.Lk)("tbody",null,[t[2]||(t[2]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Model"),(0,s.Lk)("td",null,"PN16")],-1)),(0,s.Lk)("tr",null,[t[1]||(t[1]=(0,s.Lk)("td",null,"Vendor",-1)),(0,s.Lk)("td",null,[(0,s.bF)(o,{to:"/supported-devices/#v=ZSVIOT"},{default:(0,s.k6)(()=>[...t[0]||(t[0]=[(0,s.eW)("ZSVIOT",-1)])]),_:1})])]),t[3]||(t[3]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Description"),(0,s.Lk)("td",null,"16-way controller")],-1)),t[4]||(t[4]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Exposes"),(0,s.Lk)("td",null,"power_on_behavior, switch (state), switch_type, switch_mode")],-1)),t[5]||(t[5]=(0,s.Lk)("tr",null,[(0,s.Lk)("td",null,"Picture"),(0,s.Lk)("td",null,[(0,s.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/PN16.png",alt:"ZSVIOT PN16"})])],-1))])]),t[8]||(t[8]=(0,s.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><p>The Power-on behavior: &#39;Off&#39; option does not work on the first four channels(1-4). After power is restored, if any of the first four relays were switched on during the power loss, they will remain &#39;on&#39; even though the LEDs on the device are off and Zigbee2MQTT shows them as off.</p><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="power-on-behavior-enum" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum"><span>Power-on behavior (enum)</span></a></h3><p>Controls the behavior when the device is powered on after power loss. Value can be found in the published state on the <code>power_on_behavior</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>on</code>, <code>previous</code>.</p><h3 id="switch-all-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-all-endpoint"><span>Switch (all endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_all</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_all&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_all&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_all&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-type-1-8-channels-enum-l1-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-1-8-channels-enum-l1-l8-endpoint"><span>Switch type 1-8 channels (enum, l1_l8 endpoint)</span></a></h3><p>Type of the switch. Value can be found in the published state on the <code>switch_type_l1_l8</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_l1_l8&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_l1_l8&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>state</code>, <code>momentary</code>.</p><h3 id="switch-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l1-endpoint"><span>Switch (l1 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l1</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l1&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l1&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l1&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l2-endpoint"><span>Switch (l2 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l2</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l2&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l2&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l2&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l3-endpoint"><span>Switch (l3 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l3</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l3&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l3&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l3&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l4-endpoint"><span>Switch (l4 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l4</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l4&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l4&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l4&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l5-endpoint"><span>Switch (l5 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l5</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l5&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l5&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l5&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l6-endpoint"><span>Switch (l6 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l6</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l6&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l6&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l6&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l7-endpoint"><span>Switch (l7 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l7</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l7&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l7&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l7&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l8-endpoint"><span>Switch (l8 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l8</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l8&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l8&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l8&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-type-9-16-channels-enum-l9-l16-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-type-9-16-channels-enum-l9-l16-endpoint"><span>Switch type 9-16 channels (enum, l9_l16 endpoint)</span></a></h3><p>Type of the switch. Value can be found in the published state on the <code>switch_type_l9_l16</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;switch_type_l9_l16&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_type_l9_l16&quot;: NEW_VALUE}</code>. The possible values are: <code>toggle</code>, <code>state</code>, <code>momentary</code>.</p><h3 id="switch-l9-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l9-endpoint"><span>Switch (l9 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l9</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l9&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l9&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l9&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l10-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l10-endpoint"><span>Switch (l10 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l10</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l10&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l10&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l10&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="mode-11-12-channels-enum-l11-l12-endpoint" tabindex="-1"><a class="header-anchor" href="#mode-11-12-channels-enum-l11-l12-endpoint"><span>Mode 11-12 channels (enum, l11_l12 endpoint)</span></a></h3><p>Sets the mode of the switch to act as a switch or as a curtain controller. Value can be found in the published state on the <code>switch_mode_l11_l12</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l11_l12&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>curtain</code>.</p><h3 id="switch-l11-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l11-endpoint"><span>Switch (l11 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l11</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l11&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l11&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l11&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l12-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l12-endpoint"><span>Switch (l12 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l12</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l12&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l12&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l12&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="mode-13-14-channels-enum-l13-l14-endpoint" tabindex="-1"><a class="header-anchor" href="#mode-13-14-channels-enum-l13-l14-endpoint"><span>Mode 13-14 channels (enum, l13_l14 endpoint)</span></a></h3><p>Sets the mode of the switch to act as a switch or as a curtain controller. Value can be found in the published state on the <code>switch_mode_l13_l14</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l13_l14&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>curtain</code>.</p><h3 id="switch-l13-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l13-endpoint"><span>Switch (l13 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l13</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l13&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l13&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l13&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l14-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l14-endpoint"><span>Switch (l14 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l14</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l14&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l14&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l14&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="mode-15-16-channels-enum-l15-l16-endpoint" tabindex="-1"><a class="header-anchor" href="#mode-15-16-channels-enum-l15-l16-endpoint"><span>Mode 15-16 channels (enum, l15_l16 endpoint)</span></a></h3><p>Sets the mode of the switch to act as a switch or as a curtain controller. Value can be found in the published state on the <code>switch_mode_l15_l16</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l15_l16&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>curtain</code>.</p><h3 id="switch-l15-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l15-endpoint"><span>Switch (l15 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l15</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l15&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l15&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l15&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l16-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l16-endpoint"><span>Switch (l16 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l16</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l16&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l16&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l16&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p>',49))])}]]),a=JSON.parse('{"path":"/devices/PN16.html","title":"ZSVIOT PN16 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"ZSVIOT PN16 control via MQTT","description":"Integrate your ZSVIOT PN16 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-05-01T17:59:09.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/PN16.md"}')}}]);