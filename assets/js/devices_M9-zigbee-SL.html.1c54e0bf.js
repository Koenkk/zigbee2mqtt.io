"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[18253],{1368:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>s,data:()=>i});var d=t(60362);const a={},s=(0,t(60654).A)(a,[["render",function(e,o){const t=(0,d.g2)("RouteLink");return(0,d.uX)(),(0,d.CE)("div",null,[o[7]||(o[7]=(0,d.Lk)("h1",{id:"tuya-m9-zigbee-sl",tabindex:"-1"},[(0,d.Lk)("a",{class:"header-anchor",href:"#tuya-m9-zigbee-sl"},[(0,d.Lk)("span",null,"Tuya M9-zigbee-SL")])],-1)),(0,d.Lk)("table",null,[o[6]||(o[6]=(0,d.Lk)("thead",null,[(0,d.Lk)("tr",null,[(0,d.Lk)("th"),(0,d.Lk)("th")])],-1)),(0,d.Lk)("tbody",null,[o[2]||(o[2]=(0,d.Lk)("tr",null,[(0,d.Lk)("td",null,"Model"),(0,d.Lk)("td",null,"M9-zigbee-SL")],-1)),(0,d.Lk)("tr",null,[o[1]||(o[1]=(0,d.Lk)("td",null,"Vendor",-1)),(0,d.Lk)("td",null,[(0,d.bF)(t,{to:"/supported-devices/#v=Tuya"},{default:(0,d.k6)(()=>[...o[0]||(o[0]=[(0,d.eW)("Tuya",-1)])]),_:1})])]),o[3]||(o[3]=(0,d.Lk)("tr",null,[(0,d.Lk)("td",null,"Description"),(0,d.Lk)("td",null,"Smart Switch (4 gang + 4 scene) with neutral wire and motion sensing")],-1)),o[4]||(o[4]=(0,d.Lk)("tr",null,[(0,d.Lk)("td",null,"Exposes"),(0,d.Lk)("td",null,"switch (state), power_on_behavior, switch_mode, light_mode, backlight_mode, presence, delay, action")],-1)),o[5]||(o[5]=(0,d.Lk)("tr",null,[(0,d.Lk)("td",null,"Picture"),(0,d.Lk)("td",null,[(0,d.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/M9-zigbee-SL.png",alt:"Tuya M9-zigbee-SL"})])],-1))])]),o[8]||(o[8]=(0,d.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="switch-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l1-endpoint"><span>Switch (l1 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l1</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l1&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l1&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l1&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l2-endpoint"><span>Switch (l2 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l2</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l2&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l2&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l2&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l3-endpoint"><span>Switch (l3 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l3</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l3&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l3&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l3&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l4-endpoint"><span>Switch (l4 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l4</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l4&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l4&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l4&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l5-endpoint"><span>Switch (l5 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l5</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l5&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l5&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l5&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l6-endpoint"><span>Switch (l6 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l6</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l6&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l6&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l6&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l7-endpoint"><span>Switch (l7 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l7</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l7&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l7&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l7&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="switch-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-l8-endpoint"><span>Switch (l8 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_l8</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_l8&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_l8&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_l8&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="power-on-behavior-enum-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l1-endpoint"><span>Power-on behavior (enum, l1 endpoint)</span></a></h3><p>Controls the behavior when the device is powered on after power loss. Value can be found in the published state on the <code>power_on_behavior_l1</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l1&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l2-endpoint"><span>Power-on behavior (enum, l2 endpoint)</span></a></h3><p>Controls the behavior when the device is powered on after power loss. Value can be found in the published state on the <code>power_on_behavior_l2</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l2&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l3-endpoint"><span>Power-on behavior (enum, l3 endpoint)</span></a></h3><p>Controls the behavior when the device is powered on after power loss. Value can be found in the published state on the <code>power_on_behavior_l3</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l3&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l4-endpoint"><span>Power-on behavior (enum, l4 endpoint)</span></a></h3><p>Controls the behavior when the device is powered on after power loss. Value can be found in the published state on the <code>power_on_behavior_l4</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l4&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l5-endpoint"><span>Power-on behavior (enum, l5 endpoint)</span></a></h3><p>Controls the behavior when the device is powered on after power loss. Value can be found in the published state on the <code>power_on_behavior_l5</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l5&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l6-endpoint"><span>Power-on behavior (enum, l6 endpoint)</span></a></h3><p>Controls the behavior when the device is powered on after power loss. Value can be found in the published state on the <code>power_on_behavior_l6</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l6&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l7-endpoint"><span>Power-on behavior (enum, l7 endpoint)</span></a></h3><p>Controls the behavior when the device is powered on after power loss. Value can be found in the published state on the <code>power_on_behavior_l7</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l7&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="power-on-behavior-enum-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum-l8-endpoint"><span>Power-on behavior (enum, l8 endpoint)</span></a></h3><p>Controls the behavior when the device is powered on after power loss. Value can be found in the published state on the <code>power_on_behavior_l8</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior_l8&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>previous</code>, <code>on</code>.</p><h3 id="switch-mode-enum-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l1-endpoint"><span>Switch mode (enum, l1 endpoint)</span></a></h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l1</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l1&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l2-endpoint"><span>Switch mode (enum, l2 endpoint)</span></a></h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l2</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l2&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l3-endpoint"><span>Switch mode (enum, l3 endpoint)</span></a></h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l3</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l3&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l4-endpoint"><span>Switch mode (enum, l4 endpoint)</span></a></h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l4</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l4&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l5-endpoint"><span>Switch mode (enum, l5 endpoint)</span></a></h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l5</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l5&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l6-endpoint"><span>Switch mode (enum, l6 endpoint)</span></a></h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l6</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l6&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l7-endpoint"><span>Switch mode (enum, l7 endpoint)</span></a></h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l7</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l7&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="switch-mode-enum-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-mode-enum-l8-endpoint"><span>Switch mode (enum, l8 endpoint)</span></a></h3><p>Sets the mode of the switch to act as a switch or as a scene. Value can be found in the published state on the <code>switch_mode_l8</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_mode_l8&quot;: NEW_VALUE}</code>. The possible values are: <code>switch</code>, <code>scene</code>.</p><h3 id="light-mode-enum-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l1-endpoint"><span>Light mode (enum, l1 endpoint)</span></a></h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l1</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l1&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l2-endpoint"><span>Light mode (enum, l2 endpoint)</span></a></h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l2</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l2&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l3-endpoint"><span>Light mode (enum, l3 endpoint)</span></a></h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l3</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l3&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l4-endpoint"><span>Light mode (enum, l4 endpoint)</span></a></h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l4</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l4&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l5-endpoint"><span>Light mode (enum, l5 endpoint)</span></a></h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l5</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l5&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l6-endpoint"><span>Light mode (enum, l6 endpoint)</span></a></h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l6</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l6&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l7-endpoint"><span>Light mode (enum, l7 endpoint)</span></a></h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l7</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l7&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="light-mode-enum-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#light-mode-enum-l8-endpoint"><span>Light mode (enum, l8 endpoint)</span></a></h3><p>&#39;Sets the indicator mode of l1. Normal: Orange while off and white while on. On: Always white. Off: Always orange. Flash: Flashes white when triggered. Note: Orange light will turn off after light off delay, white light always stays on. Light mode updates on next state change.&#39;. Value can be found in the published state on the <code>light_mode_l8</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_mode_l8&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>on</code>, <code>off</code>, <code>flash</code>.</p><h3 id="backlight-mode-binary" tabindex="-1"><a class="header-anchor" href="#backlight-mode-binary"><span>Backlight mode (binary)</span></a></h3><p>Mode of the backlight. Value can be found in the published state on the <code>backlight_mode</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;backlight_mode&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> backlight mode is ON, if <code>OFF</code> OFF.</p><h3 id="presence-binary" tabindex="-1"><a class="header-anchor" href="#presence-binary"><span>Presence (binary)</span></a></h3><p>Indicates whether the device detected presence. Value can be found in the published state on the <code>presence</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> presence is ON, if <code>false</code> OFF.</p><h3 id="delay-numeric" tabindex="-1"><a class="header-anchor" href="#delay-numeric"><span>Delay (numeric)</span></a></h3><p>light off delay. Value can be found in the published state on the <code>delay</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;delay&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>1000</code>. The unit of this value is <code>sec</code>.</p><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>scene_1</code>, <code>scene_2</code>, <code>scene_3</code>, <code>scene_4</code>, <code>scene_5</code>, <code>scene_6</code>, <code>scene_7</code>, <code>scene_8</code>.</p>',73))])}]]),i=JSON.parse('{"path":"/devices/M9-zigbee-SL.html","title":"Tuya M9-zigbee-SL control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Tuya M9-zigbee-SL control via MQTT","description":"Integrate your Tuya M9-zigbee-SL via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2023-08-01T15:13:29.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/M9-zigbee-SL.md"}')}}]);