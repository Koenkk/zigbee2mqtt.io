"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[69009],{84986:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>o,data:()=>p});var e=a(60362);const t={},o=(0,a(60654).A)(t,[["render",function(n,s){const a=(0,e.g2)("RouteLink");return(0,e.uX)(),(0,e.CE)("div",null,[s[3]||(s[3]=(0,e.Fv)('<h1 id="more-configuration-options" tabindex="-1"><a class="header-anchor" href="#more-configuration-options"><span>More configuration options</span></a></h1><h2 id="network-map" tabindex="-1"><a class="header-anchor" href="#network-map"><span>Network map</span></a></h2><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token comment"># Optional: networkmap options</span></span>\n<span class="line"><span class="token key atrule">map_options</span><span class="token punctuation">:</span></span>\n<span class="line">    <span class="token key atrule">graphviz</span><span class="token punctuation">:</span></span>\n<span class="line">        <span class="token comment"># Optional: Colors to be used in the graphviz network map (default: shown below)</span></span>\n<span class="line">        <span class="token key atrule">colors</span><span class="token punctuation">:</span></span>\n<span class="line">            <span class="token key atrule">fill</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">enddevice</span><span class="token punctuation">:</span> <span class="token string">&#39;#fff8ce&#39;</span></span>\n<span class="line">                <span class="token key atrule">coordinator</span><span class="token punctuation">:</span> <span class="token string">&#39;#e04e5d&#39;</span></span>\n<span class="line">                <span class="token key atrule">router</span><span class="token punctuation">:</span> <span class="token string">&#39;#4ea3e0&#39;</span></span>\n<span class="line">            <span class="token key atrule">font</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">coordinator</span><span class="token punctuation">:</span> <span class="token string">&#39;#ffffff&#39;</span></span>\n<span class="line">                <span class="token key atrule">router</span><span class="token punctuation">:</span> <span class="token string">&#39;#ffffff&#39;</span></span>\n<span class="line">                <span class="token key atrule">enddevice</span><span class="token punctuation">:</span> <span class="token string">&#39;#000000&#39;</span></span>\n<span class="line">            <span class="token key atrule">line</span><span class="token punctuation">:</span></span>\n<span class="line">                <span class="token key atrule">active</span><span class="token punctuation">:</span> <span class="token string">&#39;#009900&#39;</span></span>\n<span class="line">                <span class="token key atrule">inactive</span><span class="token punctuation">:</span> <span class="token string">&#39;#994444&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="external-converters" tabindex="-1"><a class="header-anchor" href="#external-converters"><span>External converters</span></a></h2><p>You can define external converters to e.g. add support for a DiY device. The extension can be a file with <code>.js</code> extension in the <code>data/external_converters/</code> directory or a NPM package. Ensure that default export from your external converter exports an array or device object (refer to the definition in the <code>devices</code> folder of zigbee-herdsman-converters). Some examples can be found <a href="https://github.com/Koenkk/zigbee2mqtt.io/tree/master/docs/externalConvertersExample" target="_blank" rel="noopener noreferrer">here</a>.</p><p>Note that external converters take precedence of standard converters</p>',6)),(0,e.Lk)("p",null,[s[1]||(s[1]=(0,e.eW)("See also ",-1)),(0,e.bF)(a,{to:"/advanced/support-new-devices/01_support_new_devices.html"},{default:(0,e.k6)(()=>[...s[0]||(s[0]=[(0,e.eW)("How to support new devices",-1)])]),_:1}),s[2]||(s[2]=(0,e.eW)(".",-1))])])}]]),p=JSON.parse('{"path":"/guide/configuration/more-config-options.html","title":"More configuration options","lang":"en-US","frontmatter":{"pageClass":"content-page","sidebarDepth":1},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"guide/configuration/more-config-options.md"}')}}]);