"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[71989],{40197:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>s,data:()=>a});var d=t(60362);const c={},s=(0,t(60654).A)(c,[["render",function(e,o){const t=(0,d.g2)("RouteLink");return(0,d.uX)(),(0,d.CE)("div",null,[o[7]||(o[7]=(0,d.Lk)("h1",{id:"gledopto-gl-spi-206p",tabindex:"-1"},[(0,d.Lk)("a",{class:"header-anchor",href:"#gledopto-gl-spi-206p"},[(0,d.Lk)("span",null,"Gledopto GL-SPI-206P")])],-1)),(0,d.Lk)("table",null,[o[6]||(o[6]=(0,d.Lk)("thead",null,[(0,d.Lk)("tr",null,[(0,d.Lk)("th"),(0,d.Lk)("th")])],-1)),(0,d.Lk)("tbody",null,[o[2]||(o[2]=(0,d.Lk)("tr",null,[(0,d.Lk)("td",null,"Model"),(0,d.Lk)("td",null,"GL-SPI-206P")],-1)),(0,d.Lk)("tr",null,[o[1]||(o[1]=(0,d.Lk)("td",null,"Vendor",-1)),(0,d.Lk)("td",null,[(0,d.bF)(t,{to:"/supported-devices/#v=Gledopto"},{default:(0,d.k6)(()=>[...o[0]||(o[0]=[(0,d.eW)("Gledopto",-1)])]),_:1})])]),o[3]||(o[3]=(0,d.Lk)("tr",null,[(0,d.Lk)("td",null,"Description"),(0,d.Lk)("td",null,"SPI pixel controller RGBCCT/RGBW/RGB")],-1)),o[4]||(o[4]=(0,d.Lk)("tr",null,[(0,d.Lk)("td",null,"Exposes"),(0,d.Lk)("td",null,"light (state, color_hs), brightness, color_temp, scene, music_mode, music_sensitivity, countdown, do_not_disturb, light_bead_sequence, chip_type, lightpixel_number_set, work_mode")],-1)),o[5]||(o[5]=(0,d.Lk)("tr",null,[(0,d.Lk)("td",null,"Picture"),(0,d.Lk)("td",null,[(0,d.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/GL-SPI-206P.png",alt:"Gledopto GL-SPI-206P"})])],-1))])]),o[8]||(o[8]=(0,d.Fv)('<h1 id="button-functions" tabindex="-1"><a class="header-anchor" href="#button-functions"><span>Button Functions</span></a></h1><p><strong>Opt:</strong></p><ol><li><strong>Short press:</strong> Turn lights on/off.</li><li><strong>Double short press:</strong> Cycle through lighting dynamic effects (Total 24 dynamicmodes). <strong>Triple short press:</strong> Toggle power-on memory function, the connected strip3.fashes once to confrm.(Default is memory off. The power-on memoryfunction determines whether the controller remembers its on/off statebefore power loss).</li><li><strong>Long press:</strong> Reset the controller-clear Wi-Fi network and RF remotepairing and return to initial factory settings. (indication: strip flashes fivetimes, then the status LED blinks).Initial settings are: 1.Chip type: WS2811;2.Color order: RGB; 3. Number of chips: 60.</li></ol><p><strong>Push:</strong></p><ol><li><strong>Short press:</strong> Turn lights on/off.2.Double short press: Cycle through lighting dynamic effects (Total 24 dynamicmodes).</li><li><strong>Long press:</strong> Adjust brightness (holding increases brightness; after release,holding again decreases brightness).</li></ol><h1 id="supported-chips" tabindex="-1"><a class="header-anchor" href="#supported-chips"><span>Supported chips</span></a></h1><table><thead><tr><th>Chip model</th><th>Compatible chip models</th></tr></thead><tbody><tr><td>WS2801</td><td>WS2803</td></tr><tr><td>LPD6803</td><td>LPD1101,D705,UCS6909,UCS6912</td></tr><tr><td>LPD8803</td><td>LPD8806</td></tr><tr><td>TM1809</td><td>TM1804,TM1812,UCS1903,UCS1909,UCS1912,SK6813,UCS2903,UCS2909,UCS2912,WS2811,WS2812,WS2813,WS2815,SM16703P,GS8206</td></tr><tr><td>TM1814B(RGBW)</td><td></td></tr><tr><td>TM1934A</td><td></td></tr><tr><td>SK6812(RGBW)</td><td>UCS2904(RGBW),SM16704(RGBW)</td></tr><tr><td>SK9822</td><td></td></tr><tr><td>UCS2904B(RGBW)</td><td></td></tr><tr><td>UCS8904B(RGBW)</td><td></td></tr></tbody></table><h1 id="indicator-light-status" tabindex="-1"><a class="header-anchor" href="#indicator-light-status"><span>Indicator Light Status</span></a></h1><p><strong>Flashing:</strong> Not Connected to Network</p><p><strong>Steady On:</strong> Connected to Network</p><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="light" tabindex="-1"><a class="header-anchor" href="#light"><span>Light</span></a></h3><p>This light supports the following features: <code>state</code>, <code>color_hs</code>.</p><ul><li><code>state</code>: To control the state publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state&quot;: &quot;ON&quot;}</code>, <code>{&quot;state&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state&quot;: &quot;TOGGLE&quot;}</code>. To read the state send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state&quot;: &quot;&quot;}</code>.</li><li><code>color_hs</code>: To control the hue/saturation (color) publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;color&quot;: {&quot;hue&quot;: HUE, &quot;saturation&quot;: SATURATION}}</code> (e.g. <code>{&quot;color&quot;:{&quot;hue&quot;:360,&quot;saturation&quot;:100}}</code>). To read the hue/saturation send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;color&quot;:{&quot;hue&quot;:&quot;&quot;,&quot;saturation&quot;:&quot;&quot;}}</code>. Alternatively it is possible to set the hue/saturation via: <ul><li>HSB space (hue, saturation, brightness): <code>{&quot;color&quot;: {&quot;h&quot;: H, &quot;s&quot;: S, &quot;b&quot;: B}}</code> e.g. <code>{&quot;color&quot;:{&quot;h&quot;:360,&quot;s&quot;:100,&quot;b&quot;:100}}</code> or <code>{&quot;color&quot;: {&quot;hsb&quot;: &quot;H,S,B&quot;}}</code> e.g. <code>{&quot;color&quot;:{&quot;hsb&quot;:&quot;360,100,100&quot;}}</code></li><li>HSV space (hue, saturation, value):<code>{&quot;color&quot;: {&quot;h&quot;: H, &quot;s&quot;: S, &quot;v&quot;: V}}</code> e.g. <code>{&quot;color&quot;:{&quot;h&quot;:360,&quot;s&quot;:100,&quot;v&quot;:100}}</code> or <code>{&quot;color&quot;: {&quot;hsv&quot;: &quot;H,S,V&quot;}}</code> e.g. <code>{&quot;color&quot;:{&quot;hsv&quot;:&quot;360,100,100&quot;}}</code></li><li>HSL space (hue, saturation, lightness)<code>{&quot;color&quot;: {&quot;h&quot;: H, &quot;s&quot;: S, &quot;l&quot;: L}}</code> e.g. <code>{&quot;color&quot;:{&quot;h&quot;:360,&quot;s&quot;:100,&quot;l&quot;:100}}</code> or <code>{&quot;color&quot;: {&quot;hsl&quot;: &quot;H,S,L&quot;}}</code> e.g. <code>{&quot;color&quot;:{&quot;hsl&quot;:&quot;360,100,100&quot;}}</code></li></ul></li></ul><h3 id="brightness-numeric" tabindex="-1"><a class="header-anchor" href="#brightness-numeric"><span>Brightness (numeric)</span></a></h3><p>Value can be found in the published state on the <code>brightness</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;brightness&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>1000</code>.</p><h3 id="color-temp-numeric" tabindex="-1"><a class="header-anchor" href="#color-temp-numeric"><span>Color temp (numeric)</span></a></h3><p>Color temperature (0=warm, 1000=cold). Value can be found in the published state on the <code>color_temp</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;color_temp&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>1000</code>.</p><h3 id="scene-enum" tabindex="-1"><a class="header-anchor" href="#scene-enum"><span>Scene (enum)</span></a></h3><p>Scenes selection. Value can be found in the published state on the <code>scene</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;scene&quot;: NEW_VALUE}</code>. The possible values are: <code>ice_land_blue</code>, <code>glacier_express</code>, <code>sea_of_clouds</code>, <code>fireworks_at_sea</code>, <code>firefly_night</code>, <code>grass_land</code>, <code>northern_lights</code>, <code>late_autumn</code>, <code>game</code>, <code>holiday</code>, <code>party</code>, <code>trend</code>, <code>meditation</code>, <code>dating</code>, <code>valentines_day</code>, <code>neon_world</code>.</p><h3 id="music-mode-enum" tabindex="-1"><a class="header-anchor" href="#music-mode-enum"><span>Music mode (enum)</span></a></h3><p>Local music. Value can be found in the published state on the <code>music_mode</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;music_mode&quot;: NEW_VALUE}</code>. The possible values are: <code>rock</code>, <code>jazz</code>, <code>classic</code>, <code>rolling</code>, <code>energy</code>, <code>spectrum</code>.</p><h3 id="music-sensitivity-numeric" tabindex="-1"><a class="header-anchor" href="#music-sensitivity-numeric"><span>Music sensitivity (numeric)</span></a></h3><p>Music rhythm sensitivity (1-100). Value can be found in the published state on the <code>music_sensitivity</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;music_sensitivity&quot;: NEW_VALUE}</code>. The minimal value is <code>1</code> and the maximum value is <code>100</code>.</p><h3 id="countdown-numeric" tabindex="-1"><a class="header-anchor" href="#countdown-numeric"><span>Countdown (numeric)</span></a></h3><p>Countdown to turn device off after a certain time. Value can be found in the published state on the <code>countdown</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;countdown&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>43200</code>. The unit of this value is <code>s</code>.</p><h3 id="do-not-disturb-binary" tabindex="-1"><a class="header-anchor" href="#do-not-disturb-binary"><span>Do not disturb (binary)</span></a></h3><p>Value can be found in the published state on the <code>do_not_disturb</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;do_not_disturb&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> do not disturb is ON, if <code>OFF</code> OFF.</p><h3 id="light-bead-sequence-enum" tabindex="-1"><a class="header-anchor" href="#light-bead-sequence-enum"><span>Light bead sequence (enum)</span></a></h3><p>Value can be found in the published state on the <code>light_bead_sequence</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;light_bead_sequence&quot;: NEW_VALUE}</code>. The possible values are: <code>RGB</code>, <code>RBG</code>, <code>GRB</code>, <code>GBR</code>, <code>BRG</code>, <code>BGR</code>, <code>RGBW</code>, <code>RBGW</code>, <code>GRBW</code>, <code>GBRW</code>, <code>BRGW</code>, <code>BGRW</code>, <code>WRGB</code>, <code>WRBG</code>, <code>WGRB</code>, <code>WGBR</code>, <code>WBRG</code>, <code>WBGR</code>.</p><h3 id="chip-type-enum" tabindex="-1"><a class="header-anchor" href="#chip-type-enum"><span>Chip type (enum)</span></a></h3><p>Value can be found in the published state on the <code>chip_type</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;chip_type&quot;: NEW_VALUE}</code>. The possible values are: <code>WS2801</code>, <code>LPD6803</code>, <code>LPD8803</code>, <code>WS2811</code>, <code>TM1814B</code>, <code>TM1934A</code>, <code>SK6812</code>, <code>SK9822</code>, <code>UCS8904B</code>, <code>WS2805</code>.</p><h3 id="lightpixel-number-set-numeric" tabindex="-1"><a class="header-anchor" href="#lightpixel-number-set-numeric"><span>Lightpixel number set (numeric)</span></a></h3><p>Value can be found in the published state on the <code>lightpixel_number_set</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;lightpixel_number_set&quot;: NEW_VALUE}</code>. The minimal value is <code>10</code> and the maximum value is <code>1000</code>.</p><h3 id="work-mode-enum" tabindex="-1"><a class="header-anchor" href="#work-mode-enum"><span>Work mode (enum)</span></a></h3><p>Value can be found in the published state on the <code>work_mode</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;work_mode&quot;: NEW_VALUE}</code>. The possible values are: <code>white</code>, <code>colour</code>, <code>scene</code>, <code>music</code>.</p>',36))])}]]),a=JSON.parse('{"path":"/devices/GL-SPI-206P.html","title":"Gledopto GL-SPI-206P control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Gledopto GL-SPI-206P control via MQTT","description":"Integrate your Gledopto GL-SPI-206P via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-08-27T14:37:38.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/GL-SPI-206P.md"}')}}]);