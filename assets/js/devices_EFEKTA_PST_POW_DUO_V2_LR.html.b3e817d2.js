"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[65530],{82327:(e,t,o)=>{o.r(t),o.d(t,{comp:()=>i,data:()=>r});var a=o(60362);const s={},i=(0,o(60654).A)(s,[["render",function(e,t){const o=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[t[8]||(t[8]=(0,a.Lk)("h1",{id:"efekta-efekta-pst-pow-duo-v2-lr",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#efekta-efekta-pst-pow-duo-v2-lr"},[(0,a.Lk)("span",null,"EFEKTA EFEKTA_PST_POW_DUO_V2_LR")])],-1)),(0,a.Lk)("table",null,[t[6]||(t[6]=(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th"),(0,a.Lk)("th")])],-1)),(0,a.Lk)("tbody",null,[t[2]||(t[2]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Model"),(0,a.Lk)("td",null,"EFEKTA_PST_POW_DUO_V2_LR")],-1)),(0,a.Lk)("tr",null,[t[1]||(t[1]=(0,a.Lk)("td",null,"Vendor",-1)),(0,a.Lk)("td",null,[(0,a.bF)(o,{to:"/supported-devices/#v=EFEKTA"},{default:(0,a.k6)(()=>[...t[0]||(t[0]=[(0,a.eW)("EFEKTA",-1)])]),_:1})])]),t[3]||(t[3]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Description"),(0,a.Lk)("td",null,"Water, gas smart pressure monitor with two sensors, power supply, V2")],-1)),t[4]||(t[4]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Exposes"),(0,a.Lk)("td",null,"pressure, bar, psi, temperature, pressure_offset, temperature_offset, mains_voltage, battery, battery_low, uptime, reading_interval, tx_radio_power, smart_sleep, config_report_enable, comparison_previous_data")],-1)),t[5]||(t[5]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Picture"),(0,a.Lk)("td",null,[(0,a.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/EFEKTA_PST_POW_DUO_V2_LR.png",alt:"EFEKTA EFEKTA_PST_POW_DUO_V2_LR"})])],-1))])]),t[9]||(t[9]=(0,a.Lk)("h2",{id:"options",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#options"},[(0,a.Lk)("span",null,"Options")])],-1)),(0,a.Lk)("p",null,[(0,a.Lk)("em",null,[(0,a.bF)(o,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,a.k6)(()=>[...t[7]||(t[7]=[(0,a.eW)("How to use device type specific configuration",-1)])]),_:1})])]),t[10]||(t[10]=(0,a.Fv)('<ul><li><p><code>pressure_calibration</code>: Calibrates the pressure value (absolute offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>pressure_precision</code>: Number of digits after decimal point for pressure, takes into effect on next report of device. This option can only decrease the precision, not increase it. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li><li><p><code>temperature_calibration</code>: Calibrates the temperature value (absolute offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>temperature_precision</code>: Number of digits after decimal point for temperature, takes into effect on next report of device. This option can only decrease the precision, not increase it. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="pressure-numeric-1-endpoint" tabindex="-1"><a class="header-anchor" href="#pressure-numeric-1-endpoint"><span>Pressure (numeric, 1 endpoint)</span></a></h3><p>Measured pressure value оf the first sensor in kPa. Value can be found in the published state on the <code>pressure_1</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>kPa</code>.</p><h3 id="bar-numeric-1-endpoint" tabindex="-1"><a class="header-anchor" href="#bar-numeric-1-endpoint"><span>Bar (numeric, 1 endpoint)</span></a></h3><p>Measured pressure value оf the first sensor in bar. Value can be found in the published state on the <code>bar_1</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>bar</code>.</p><h3 id="psi-numeric-1-endpoint" tabindex="-1"><a class="header-anchor" href="#psi-numeric-1-endpoint"><span>Psi (numeric, 1 endpoint)</span></a></h3><p>Measured pressure value оf the first sensor in psi. Value can be found in the published state on the <code>psi_1</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>psi</code>.</p><h3 id="temperature-numeric-1-endpoint" tabindex="-1"><a class="header-anchor" href="#temperature-numeric-1-endpoint"><span>Temperature (numeric, 1 endpoint)</span></a></h3><p>Measured value of the first temperature sensor. Value can be found in the published state on the <code>temperature_1</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="pressure-offset-numeric-1-endpoint" tabindex="-1"><a class="header-anchor" href="#pressure-offset-numeric-1-endpoint"><span>Pressure offset (numeric, 1 endpoint)</span></a></h3><p>Adjust first pressure sensor. Value can be found in the published state on the <code>pressure_offset_1</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;pressure_offset_1&quot;: NEW_VALUE}</code>. The minimal value is <code>-1000</code> and the maximum value is <code>1000</code>. The unit of this value is <code>hPa</code>.</p><h3 id="temperature-offset-numeric-1-endpoint" tabindex="-1"><a class="header-anchor" href="#temperature-offset-numeric-1-endpoint"><span>Temperature offset (numeric, 1 endpoint)</span></a></h3><p>Adjust temperature sensor. Value can be found in the published state on the <code>temperature_offset_1</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;temperature_offset_1&quot;: NEW_VALUE}</code>. The minimal value is <code>-25</code> and the maximum value is <code>25</code>. The unit of this value is <code>°C</code>.</p><h3 id="pressure-numeric-2-endpoint" tabindex="-1"><a class="header-anchor" href="#pressure-numeric-2-endpoint"><span>Pressure (numeric, 2 endpoint)</span></a></h3><p>Measured pressure value оf the second sensor in kPa. Value can be found in the published state on the <code>pressure_2</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>kPa</code>.</p><h3 id="bar-numeric-2-endpoint" tabindex="-1"><a class="header-anchor" href="#bar-numeric-2-endpoint"><span>Bar (numeric, 2 endpoint)</span></a></h3><p>Measured pressure value оf the second sensor in bar. Value can be found in the published state on the <code>bar_2</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>bar</code>.</p><h3 id="psi-numeric-2-endpoint" tabindex="-1"><a class="header-anchor" href="#psi-numeric-2-endpoint"><span>Psi (numeric, 2 endpoint)</span></a></h3><p>Measured pressure value оf the second sensor in psi. Value can be found in the published state on the <code>psi_2</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>psi</code>.</p><h3 id="temperature-numeric-2-endpoint" tabindex="-1"><a class="header-anchor" href="#temperature-numeric-2-endpoint"><span>Temperature (numeric, 2 endpoint)</span></a></h3><p>Measured value of the second temperature sensor. Value can be found in the published state on the <code>temperature_2</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="pressure-offset-numeric-2-endpoint" tabindex="-1"><a class="header-anchor" href="#pressure-offset-numeric-2-endpoint"><span>Pressure offset (numeric, 2 endpoint)</span></a></h3><p>Adjust second pressure sensor. Value can be found in the published state on the <code>pressure_offset_2</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;pressure_offset_2&quot;: NEW_VALUE}</code>. The minimal value is <code>-1000</code> and the maximum value is <code>1000</code>. The unit of this value is <code>hPa</code>.</p><h3 id="temperature-offset-numeric-2-endpoint" tabindex="-1"><a class="header-anchor" href="#temperature-offset-numeric-2-endpoint"><span>Temperature offset (numeric, 2 endpoint)</span></a></h3><p>Adjust temperature sensor. Value can be found in the published state on the <code>temperature_offset_2</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;temperature_offset_2&quot;: NEW_VALUE}</code>. The minimal value is <code>-25</code> and the maximum value is <code>25</code>. The unit of this value is <code>°C</code>.</p><h3 id="mains-voltage-numeric" tabindex="-1"><a class="header-anchor" href="#mains-voltage-numeric"><span>Mains voltage (numeric)</span></a></h3><p>Mains voltage. Value can be found in the published state on the <code>mains_voltage</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;mains_voltage&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The unit of this value is <code>V</code>.</p><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;battery&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Empty battery indicator. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p><h3 id="uptime-numeric" tabindex="-1"><a class="header-anchor" href="#uptime-numeric"><span>Uptime (numeric)</span></a></h3><p>Uptime. Value can be found in the published state on the <code>uptime</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>Hours</code>.</p><h3 id="reading-interval-numeric" tabindex="-1"><a class="header-anchor" href="#reading-interval-numeric"><span>Reading interval (numeric)</span></a></h3><p>Setting the sensor reading interval in seconds, by default 10 seconds. Value can be found in the published state on the <code>reading_interval</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;reading_interval&quot;: NEW_VALUE}</code>. The minimal value is <code>10</code> and the maximum value is <code>360</code>. The unit of this value is <code>sec</code>.</p><h3 id="tx-radio-power-enum" tabindex="-1"><a class="header-anchor" href="#tx-radio-power-enum"><span>Tx radio power (enum)</span></a></h3><p>Set TX Radio Power, dbm. Value can be found in the published state on the <code>tx_radio_power</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;tx_radio_power&quot;: NEW_VALUE}</code>. The possible values are: <code>4dbm</code>, <code>19dbm</code>.</p><h3 id="smart-sleep-binary" tabindex="-1"><a class="header-anchor" href="#smart-sleep-binary"><span>Smart sleep (binary)</span></a></h3><p>Enable Smart Sleep, short wakeup every 2-7 seconds. Value can be found in the published state on the <code>smart_sleep</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;smart_sleep&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> smart sleep is ON, if <code>OFF</code> OFF.</p><h3 id="config-report-enable-binary" tabindex="-1"><a class="header-anchor" href="#config-report-enable-binary"><span>Config report enable (binary)</span></a></h3><p>Enable reporting based on reporting configuration. Value can be found in the published state on the <code>config_report_enable</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;config_report_enable&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> config report enable is ON, if <code>OFF</code> OFF.</p><h3 id="comparison-previous-data-binary" tabindex="-1"><a class="header-anchor" href="#comparison-previous-data-binary"><span>Comparison previous data (binary)</span></a></h3><p>Enable сontrol of comparison with previous data. Value can be found in the published state on the <code>comparison_previous_data</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;comparison_previous_data&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> comparison previous data is ON, if <code>OFF</code> OFF.</p>',44))])}]]),r=JSON.parse('{"path":"/devices/EFEKTA_PST_POW_DUO_V2_LR.html","title":"EFEKTA EFEKTA_PST_POW_DUO_V2_LR control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"EFEKTA EFEKTA_PST_POW_DUO_V2_LR control via MQTT","description":"Integrate your EFEKTA EFEKTA_PST_POW_DUO_V2_LR via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-02-18T14:54:46.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/EFEKTA_PST_POW_DUO_V2_LR.md"}')}}]);