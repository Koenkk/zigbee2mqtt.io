"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[24073],{17420:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>s,data:()=>c});var d=t(60362);const a={},s=(0,t(60654).A)(a,[["render",function(e,o){const t=(0,d.g2)("RouteLink");return(0,d.uX)(),(0,d.CE)("div",null,[o[7]||(o[7]=(0,d.Lk)("h1",{id:"tuya-ts0601-cover-11",tabindex:"-1"},[(0,d.Lk)("a",{class:"header-anchor",href:"#tuya-ts0601-cover-11"},[(0,d.Lk)("span",null,"Tuya TS0601_cover_11")])],-1)),(0,d.Lk)("table",null,[o[6]||(o[6]=(0,d.Lk)("thead",null,[(0,d.Lk)("tr",null,[(0,d.Lk)("th"),(0,d.Lk)("th")])],-1)),(0,d.Lk)("tbody",null,[o[2]||(o[2]=(0,d.Lk)("tr",null,[(0,d.Lk)("td",null,"Model"),(0,d.Lk)("td",null,"TS0601_cover_11")],-1)),(0,d.Lk)("tr",null,[o[1]||(o[1]=(0,d.Lk)("td",null,"Vendor",-1)),(0,d.Lk)("td",null,[(0,d.bF)(t,{to:"/supported-devices/#v=Tuya"},{default:(0,d.k6)(()=>[...o[0]||(o[0]=[(0,d.eW)("Tuya",-1)])]),_:1})])]),o[3]||(o[3]=(0,d.Lk)("tr",null,[(0,d.Lk)("td",null,"Description"),(0,d.Lk)("td",null,"Cover motor")],-1)),o[4]||(o[4]=(0,d.Lk)("tr",null,[(0,d.Lk)("td",null,"Exposes"),(0,d.Lk)("td",null,"cover (state, position), dot_mode, direction, border, speed, work_state")],-1)),o[5]||(o[5]=(0,d.Lk)("tr",null,[(0,d.Lk)("td",null,"Picture"),(0,d.Lk)("td",null,[(0,d.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/TS0601_cover_11.png",alt:"Tuya TS0601_cover_11"})])],-1))])]),o[8]||(o[8]=(0,d.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="cover" tabindex="-1"><a class="header-anchor" href="#cover"><span>Cover</span></a></h3><p>The current state of this cover is in the published state under the <code>state</code> property (value is <code>OPEN</code> or <code>CLOSE</code>). To control this cover publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state&quot;: &quot;OPEN&quot;}</code>, <code>{&quot;state&quot;: &quot;CLOSE&quot;}</code>, <code>{&quot;state&quot;: &quot;STOP&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value. To change the position publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;position&quot;: VALUE}</code> where <code>VALUE</code> is a number between <code>0</code> and <code>100</code>.</p><h3 id="dot-mode-enum" tabindex="-1"><a class="header-anchor" href="#dot-mode-enum"><span>Dot mode (enum)</span></a></h3><p>Dot mode. Value can be found in the published state on the <code>dot_mode</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;dot_mode&quot;: NEW_VALUE}</code>. The possible values are: <code>single</code>, <code>multi</code>.</p><h3 id="direction-enum" tabindex="-1"><a class="header-anchor" href="#direction-enum"><span>Direction (enum)</span></a></h3><p>Motor direction. Value can be found in the published state on the <code>direction</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;direction&quot;: NEW_VALUE}</code>. The possible values are: <code>normal</code>, <code>reversed</code>.</p><h3 id="border-enum" tabindex="-1"><a class="header-anchor" href="#border-enum"><span>Border (enum)</span></a></h3><p>Border mode. Value can be found in the published state on the <code>border</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;border&quot;: NEW_VALUE}</code>. The possible values are: <code>UP</code>, <code>Down</code>, <code>Delete</code>.</p><h3 id="speed-numeric" tabindex="-1"><a class="header-anchor" href="#speed-numeric"><span>Speed (numeric)</span></a></h3><p>Motor speed. Value can be found in the published state on the <code>speed</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;speed&quot;: NEW_VALUE}</code>. The minimal value is <code>1</code> and the maximum value is <code>5</code>.</p><h3 id="work-state-text" tabindex="-1"><a class="header-anchor" href="#work-state-text"><span>Work state (text)</span></a></h3><p>Value can be found in the published state on the <code>work_state</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value.</p>',13))])}]]),c=JSON.parse('{"path":"/devices/TS0601_cover_11.html","title":"Tuya TS0601_cover_11 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Tuya TS0601_cover_11 control via MQTT","description":"Integrate your Tuya TS0601_cover_11 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-09-30T19:37:29.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/TS0601_cover_11.md"}')}}]);