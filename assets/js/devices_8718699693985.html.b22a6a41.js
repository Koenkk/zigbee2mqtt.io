"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[21208],{42e3:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>i,data:()=>o});var n=t(60362);const s={},i=(0,t(60654).A)(s,[["render",function(e,a){const t=(0,n.g2)("RouteLink");return(0,n.uX)(),(0,n.CE)("div",null,[a[11]||(a[11]=(0,n.Lk)("h1",{id:"philips-8718699693985",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#philips-8718699693985"},[(0,n.Lk)("span",null,"Philips 8718699693985")])],-1)),(0,n.Lk)("table",null,[a[6]||(a[6]=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th"),(0,n.Lk)("th")])],-1)),(0,n.Lk)("tbody",null,[a[2]||(a[2]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Model"),(0,n.Lk)("td",null,"8718699693985")],-1)),(0,n.Lk)("tr",null,[a[1]||(a[1]=(0,n.Lk)("td",null,"Vendor",-1)),(0,n.Lk)("td",null,[(0,n.bF)(t,{to:"/supported-devices/#v=Philips"},{default:(0,n.k6)(()=>[...a[0]||(a[0]=[(0,n.eW)("Philips",-1)])]),_:1})])]),a[3]||(a[3]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Description"),(0,n.Lk)("td",null,"Hue smart button")],-1)),a[4]||(a[4]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Exposes"),(0,n.Lk)("td",null,"battery, action")],-1)),a[5]||(a[5]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Picture"),(0,n.Lk)("td",null,[(0,n.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/8718699693985.png",alt:"Philips 8718699693985"})])],-1))])]),a[12]||(a[12]=(0,n.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><p>Factory reset the Hue smart button by just removing the protection behind, and short press the reset button (Important: Long press is not making the device in pairing mode). You will see led orange flashes indicating the pairing mode.</p><h3 id="troubleshooting" tabindex="-1"><a class="header-anchor" href="#troubleshooting"><span>Troubleshooting</span></a></h3><h4 id="device-cannot-be-updated" tabindex="-1"><a class="header-anchor" href="#device-cannot-be-updated"><span>Device cannot be updated</span></a></h4><p>Sometimes you need to &quot;wake up&quot; the device as you hit the update. Especially with battery-powered devices. Just press the button before pressing the update button.</p><h2 id="ota-updates" tabindex="-1"><a class="header-anchor" href="#ota-updates"><span>OTA updates</span></a></h2>',7)),(0,n.Lk)("p",null,[a[8]||(a[8]=(0,n.eW)("This device supports OTA updates, for more information see ",-1)),(0,n.bF)(t,{to:"/guide/usage/ota_updates.html"},{default:(0,n.k6)(()=>[...a[7]||(a[7]=[(0,n.eW)("OTA updates",-1)])]),_:1}),a[9]||(a[9]=(0,n.eW)(".",-1))]),a[13]||(a[13]=(0,n.Lk)("h2",{id:"options",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#options"},[(0,n.Lk)("span",null,"Options")])],-1)),(0,n.Lk)("p",null,[(0,n.Lk)("em",null,[(0,n.bF)(t,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,n.k6)(()=>[...a[10]||(a[10]=[(0,n.eW)("How to use device type specific configuration",-1)])]),_:1})])]),a[14]||(a[14]=(0,n.Fv)('<ul><li><code>simulated_brightness</code>: Simulate a brightness value. If this device provides a brightness_move_up or brightness_move_down action it is possible to specify the update interval and delta. The action_brightness_delta indicates the delta for each interval. Example:</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">simulated_brightness</span><span class="token punctuation">:</span></span>\n<span class="line">  <span class="token key atrule">delta</span><span class="token punctuation">:</span> <span class="token number">20</span> <span class="token comment"># delta per interval, default = 20</span></span>\n<span class="line">  <span class="token key atrule">interval</span><span class="token punctuation">:</span> <span class="token number">200</span> <span class="token comment"># interval in milliseconds, default = 200</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %, can take up to 24 hours before reported. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>on</code>, <code>off</code>, <code>press</code>, <code>hold</code>, <code>release</code>.</p>',7))])}]]),o=JSON.parse('{"path":"/devices/8718699693985.html","title":"Philips 8718699693985 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Philips 8718699693985 control via MQTT","description":"Integrate your Philips 8718699693985 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2020-02-04T20:38:05.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/8718699693985.md"}')}}]);