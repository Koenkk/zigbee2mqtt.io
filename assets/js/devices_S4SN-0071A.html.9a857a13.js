"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[78764],{25555:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>i,data:()=>s});var o=a(60362);const d={},i=(0,a(60654).A)(d,[["render",function(e,t){const a=(0,o.g2)("RouteLink");return(0,o.uX)(),(0,o.CE)("div",null,[t[7]||(t[7]=(0,o.Lk)("h1",{id:"shelly-s4sn-0071a",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#shelly-s4sn-0071a"},[(0,o.Lk)("span",null,"Shelly S4SN-0071A")])],-1)),(0,o.Lk)("table",null,[t[6]||(t[6]=(0,o.Lk)("thead",null,[(0,o.Lk)("tr",null,[(0,o.Lk)("th"),(0,o.Lk)("th")])],-1)),(0,o.Lk)("tbody",null,[t[2]||(t[2]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Model"),(0,o.Lk)("td",null,"S4SN-0071A")],-1)),(0,o.Lk)("tr",null,[t[1]||(t[1]=(0,o.Lk)("td",null,"Vendor",-1)),(0,o.Lk)("td",null,[(0,o.bF)(a,{to:"/supported-devices/#v=Shelly"},{default:(0,o.k6)(()=>[...t[0]||(t[0]=[(0,o.eW)("Shelly",-1)])]),_:1})])]),t[3]||(t[3]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Description"),(0,o.Lk)("td",null,"Flood Gen 4")],-1)),t[4]||(t[4]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Exposes"),(0,o.Lk)("td",null,"battery, water_leak, tamper, battery_low, wifi_status, ip_address, dhcp_enabled, wifi_config")],-1)),t[5]||(t[5]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Picture"),(0,o.Lk)("td",null,[(0,o.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/S4SN-0071A.png",alt:"Shelly S4SN-0071A"})])],-1))])]),t[8]||(t[8]=(0,o.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;battery&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="water-leak-binary" tabindex="-1"><a class="header-anchor" href="#water-leak-binary"><span>Water leak (binary)</span></a></h3><p>Indicates whether the device detected a water leak. Value can be found in the published state on the <code>water_leak</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> water leak is ON, if <code>false</code> OFF.</p><h3 id="tamper-binary" tabindex="-1"><a class="header-anchor" href="#tamper-binary"><span>Tamper (binary)</span></a></h3><p>Indicates whether the device is tampered. Value can be found in the published state on the <code>tamper</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> tamper is ON, if <code>false</code> OFF.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Indicates whether the battery of the device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p><h3 id="wi-fi-status-text" tabindex="-1"><a class="header-anchor" href="#wi-fi-status-text"><span>Wi-Fi status (text)</span></a></h3><p>Current connection status. Value can be found in the published state on the <code>wifi_status</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;wifi_status&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value.</p><h3 id="ip-address-text" tabindex="-1"><a class="header-anchor" href="#ip-address-text"><span>IP address (text)</span></a></h3><p>IP address currently assigned to the device. Value can be found in the published state on the <code>ip_address</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;ip_address&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value.</p><h3 id="dhcp-enabled-binary" tabindex="-1"><a class="header-anchor" href="#dhcp-enabled-binary"><span>DHCP enabled (binary)</span></a></h3><p>Indicates whether DHCP is used to automatically assign network settings. Value can be found in the published state on the <code>dhcp_enabled</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;dhcp_enabled&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. If value equals <code>true</code> dHCP enabled is ON, if <code>false</code> OFF.</p><h3 id="wi-fi-configuration-composite" tabindex="-1"><a class="header-anchor" href="#wi-fi-configuration-composite"><span>Wi-Fi Configuration (composite)</span></a></h3><p>Can be set by publishing to <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;wifi_config&quot;: {&quot;enabled&quot;: VALUE, &quot;ssid&quot;: VALUE, &quot;password&quot;: VALUE, &quot;static_ip&quot;: VALUE, &quot;net_mask&quot;: VALUE, &quot;gateway&quot;: VALUE, &quot;name_server&quot;: VALUE}}</code> To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;wifi_config&quot;: &quot;&quot;}</code>.</p><ul><li><code>enabled</code> (binary): Enable/disable Wi-Fi connectivity allowed values: <code>true</code> or <code>false</code></li><li><code>ssid</code> (text): Name (SSID) of the Wi-Fi network to connect to</li><li><code>password</code> (text): Password for the selected Wi-Fi network</li><li><code>static_ip</code> (text): Manually assigned IP address (used when DHCP is disabled)</li><li><code>net_mask</code> (text): Subnet mask for the static IP configuration</li><li><code>gateway</code> (text): Default gateway address for static IP configuration</li><li><code>name_server</code> (text): Name server address for static IP configuration</li></ul>',18))])}]]),s=JSON.parse('{"path":"/devices/S4SN-0071A.html","title":"Shelly S4SN-0071A control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Shelly S4SN-0071A control via MQTT","description":"Integrate your Shelly S4SN-0071A via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-09-30T19:37:28.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/S4SN-0071A.md"}')}}]);