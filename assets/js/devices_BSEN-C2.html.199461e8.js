"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[47812],{14376:(e,t,o)=>{o.r(t),o.d(t,{comp:()=>n,data:()=>c});var a=o(60362);const i={},n=(0,o(60654).A)(i,[["render",function(e,t){const o=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[t[10]||(t[10]=(0,a.Lk)("h1",{id:"bosch-bsen-c2",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#bosch-bsen-c2"},[(0,a.Lk)("span",null,"Bosch BSEN-C2")])],-1)),(0,a.Lk)("table",null,[t[6]||(t[6]=(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th"),(0,a.Lk)("th")])],-1)),(0,a.Lk)("tbody",null,[t[2]||(t[2]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Model"),(0,a.Lk)("td",null,"BSEN-C2")],-1)),(0,a.Lk)("tr",null,[t[1]||(t[1]=(0,a.Lk)("td",null,"Vendor",-1)),(0,a.Lk)("td",null,[(0,a.bF)(o,{to:"/supported-devices/#v=Bosch"},{default:(0,a.k6)(()=>[...t[0]||(t[0]=[(0,a.eW)("Bosch",-1)])]),_:1})])]),t[3]||(t[3]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Description"),(0,a.Lk)("td",null,"Door/window contact II")],-1)),t[4]||(t[4]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Exposes"),(0,a.Lk)("td",null,"contact, break_function_enabled, break_function_timeout, break_function_state, battery, battery_low, action")],-1)),t[5]||(t[5]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Picture"),(0,a.Lk)("td",null,[(0,a.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/BSEN-C2.png",alt:"Bosch BSEN-C2"})])],-1))])]),t[11]||(t[11]=(0,a.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="indoor-outdoor-use" tabindex="-1"><a class="header-anchor" href="#indoor-outdoor-use"><span>Indoor / outdoor use</span></a></h3><p>The sensor has a waterproof level IP45 and therefore is suitable for both indoor and outdoor use. (according manufacturer specification)</p><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><p>To pair this device you have to install the device via its installation code which you can get by scanning the QR-code sticker on the physical device with your smartphone. Then get the device into pairing mode. In zigbee2mqtt navigate to &quot;Settings&quot; --&gt; &quot;Tools&quot; and click on &quot;Add install code&quot;. Paste the code you got from the QR-code and confirm by clicking &quot;OK&quot; which will get zigbee2mqtt into pairing mode automatically. Wait for your device to be joined.</p><h3 id="factory-resetting" tabindex="-1"><a class="header-anchor" href="#factory-resetting"><span>Factory resetting</span></a></h3><p>To factory reset the device remove the batteries. While pressing and holding the device&#39;s main button, insert the battery back. As soon as the device&#39;s LED is starting to blink orange (approx 3sec), release the device&#39;s main button and press and hold it again until the device&#39;s LED is lighting up green.</p><h2 id="ota-updates" tabindex="-1"><a class="header-anchor" href="#ota-updates"><span>OTA updates</span></a></h2>',8)),(0,a.Lk)("p",null,[t[8]||(t[8]=(0,a.eW)("This device supports OTA updates, for more information see ",-1)),(0,a.bF)(o,{to:"/guide/usage/ota_updates.html"},{default:(0,a.k6)(()=>[...t[7]||(t[7]=[(0,a.eW)("OTA updates",-1)])]),_:1}),t[9]||(t[9]=(0,a.eW)(".",-1))]),t[12]||(t[12]=(0,a.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="contact-binary" tabindex="-1"><a class="header-anchor" href="#contact-binary"><span>Contact (binary)</span></a></h3><p>Indicates whether the device is opened or closed. Value can be found in the published state on the <code>contact</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>false</code> contact is ON, if <code>true</code> OFF.</p><h3 id="break-function-binary" tabindex="-1"><a class="header-anchor" href="#break-function-binary"><span>Break function (binary)</span></a></h3><p>Activate the break function by pressing the operating button on the door/window contact twice. This means that the device temporarily stops reading the sensors.. Value can be found in the published state on the <code>break_function_enabled</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;break_function_enabled&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;break_function_enabled&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> break function is ON, if <code>OFF</code> OFF.</p><h3 id="automatic-time-limit-for-breaks-numeric" tabindex="-1"><a class="header-anchor" href="#automatic-time-limit-for-breaks-numeric"><span>Automatic time limit for breaks (numeric)</span></a></h3><p>Here you can define how long the break function is activated for the door/window contact. Once the time limit has expired, the break ends automatically. The LED on the device will flash orange as long as the break is activated when this setting is being used.. Value can be found in the published state on the <code>break_function_timeout</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;break_function_timeout&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;break_function_timeout&quot;: NEW_VALUE}</code>. The minimal value is <code>1</code> and the maximum value is <code>15</code>. The unit of this value is <code>minutes</code>. Besides the numeric values the following values are accepted: <code>disable</code>.</p><h3 id="break-function-state-enum" tabindex="-1"><a class="header-anchor" href="#break-function-state-enum"><span>Break function state (enum)</span></a></h3><p>Indicates whether the device is in break mode or not. Value can be found in the published state on the <code>break_function_state</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;break_function_state&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>break_active</code>, <code>idle</code>.</p><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;battery&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Empty battery indicator. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>long_press</code>, <code>single_press</code>, <code>none</code>.</p>',15))])}]]),c=JSON.parse('{"path":"/devices/BSEN-C2.html","title":"Bosch BSEN-C2 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Bosch BSEN-C2 control via MQTT","description":"Integrate your Bosch BSEN-C2 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2023-02-01T14:45:57.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/BSEN-C2.md"}')}}]);