"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[81680],{40653:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>d,data:()=>s});var a=t(60362);const c={},d=(0,t(60654).A)(c,[["render",function(e,o){const t=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[o[7]||(o[7]=(0,a.Lk)("h1",{id:"hobeian-zg-302zm",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#hobeian-zg-302zm"},[(0,a.Lk)("span",null,"HOBEIAN ZG-302ZM")])],-1)),(0,a.Lk)("table",null,[o[6]||(o[6]=(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th"),(0,a.Lk)("th")])],-1)),(0,a.Lk)("tbody",null,[o[2]||(o[2]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Model"),(0,a.Lk)("td",null,"ZG-302ZM")],-1)),(0,a.Lk)("tr",null,[o[1]||(o[1]=(0,a.Lk)("td",null,"Vendor",-1)),(0,a.Lk)("td",null,[(0,a.bF)(t,{to:"/supported-devices/#v=HOBEIAN"},{default:(0,a.k6)(()=>[...o[0]||(o[0]=[(0,a.eW)("HOBEIAN",-1)])]),_:1})])]),o[3]||(o[3]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Description"),(0,a.Lk)("td",null,"Motion sensing switch")],-1)),o[4]||(o[4]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Exposes"),(0,a.Lk)("td",null,"presence, switch1, switch2, switch3, sensitivity, backlight, trigger_hold, power_outage_memory, auto_on, auto_off, trigger_switch")],-1)),o[5]||(o[5]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Picture"),(0,a.Lk)("td",null,[(0,a.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/ZG-302ZM.png",alt:"HOBEIAN ZG-302ZM"})])],-1))])]),o[8]||(o[8]=(0,a.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><p>The power must be disconnected during installation</p><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="presence-binary" tabindex="-1"><a class="header-anchor" href="#presence-binary"><span>Presence (binary)</span></a></h3><p>Indicates whether the device detected presence. Value can be found in the published state on the <code>presence</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> presence is ON, if <code>false</code> OFF.</p><h3 id="switch1-binary" tabindex="-1"><a class="header-anchor" href="#switch1-binary"><span>Switch1 (binary)</span></a></h3><p>Switch1. Value can be found in the published state on the <code>switch1</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch1&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> switch1 is ON, if <code>OFF</code> OFF.</p><h3 id="switch2-binary" tabindex="-1"><a class="header-anchor" href="#switch2-binary"><span>Switch2 (binary)</span></a></h3><p>Switch2. Value can be found in the published state on the <code>switch2</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch2&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> switch2 is ON, if <code>OFF</code> OFF.</p><h3 id="switch3-binary" tabindex="-1"><a class="header-anchor" href="#switch3-binary"><span>Switch3 (binary)</span></a></h3><p>Switch3. Value can be found in the published state on the <code>switch3</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch3&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> switch3 is ON, if <code>OFF</code> OFF.</p><h3 id="sensitivity-numeric" tabindex="-1"><a class="header-anchor" href="#sensitivity-numeric"><span>Sensitivity (numeric)</span></a></h3><p>detection sensitivity. Value can be found in the published state on the <code>sensitivity</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;sensitivity&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>19</code>. The unit of this value is <code>x</code>.</p><h3 id="backlight-binary" tabindex="-1"><a class="header-anchor" href="#backlight-binary"><span>Backlight (binary)</span></a></h3><p>backlight. Value can be found in the published state on the <code>backlight</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;backlight&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> backlight is ON, if <code>OFF</code> OFF.</p><h3 id="trigger-hold-numeric" tabindex="-1"><a class="header-anchor" href="#trigger-hold-numeric"><span>Trigger hold (numeric)</span></a></h3><p>Trigger hold(second). Value can be found in the published state on the <code>trigger_hold</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;trigger_hold&quot;: NEW_VALUE}</code>. The minimal value is <code>5</code> and the maximum value is <code>28800</code>. The unit of this value is <code>s</code>.</p><h3 id="power-outage-memory-enum" tabindex="-1"><a class="header-anchor" href="#power-outage-memory-enum"><span>Power outage memory (enum)</span></a></h3><p>Recover state after power outage. Value can be found in the published state on the <code>power_outage_memory</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;power_outage_memory&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_outage_memory&quot;: NEW_VALUE}</code>. The possible values are: <code>on</code>, <code>off</code>, <code>restore</code>.</p><h3 id="auto-on-enum" tabindex="-1"><a class="header-anchor" href="#auto-on-enum"><span>Auto on (enum)</span></a></h3><p>Someone turn on the light. Value can be found in the published state on the <code>auto_on</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;auto_on&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>all</code>, <code>ch1</code>, <code>ch2</code>, <code>ch3</code>, <code>ch1_2</code>, <code>ch2_3</code>, <code>ch1_3</code>.</p><h3 id="auto-off-enum" tabindex="-1"><a class="header-anchor" href="#auto-off-enum"><span>Auto off (enum)</span></a></h3><p>No one turns off the lights. Value can be found in the published state on the <code>auto_off</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;auto_off&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>all</code>, <code>ch1</code>, <code>ch2</code>, <code>ch3</code>, <code>ch1_2</code>, <code>ch2_3</code>, <code>ch1_3</code>.</p><h3 id="trigger-switch-enum" tabindex="-1"><a class="header-anchor" href="#trigger-switch-enum"><span>Trigger switch (enum)</span></a></h3><p>Switch state reversal. Value can be found in the published state on the <code>trigger_switch</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;trigger_switch&quot;: NEW_VALUE}</code>. The possible values are: <code>ch1</code>, <code>ch2</code>, <code>ch3</code>.</p>',25))])}]]),s=JSON.parse('{"path":"/devices/ZG-302ZM.html","title":"HOBEIAN ZG-302ZM control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"HOBEIAN ZG-302ZM control via MQTT","description":"Integrate your HOBEIAN ZG-302ZM via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-01-24T19:08:17.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/ZG-302ZM.md"}')}}]);