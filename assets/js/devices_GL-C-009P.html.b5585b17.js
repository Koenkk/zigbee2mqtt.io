"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[59221],{76942:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>s,data:()=>a});var n=t(60362);const i={},s=(0,t(60654).A)(i,[["render",function(e,o){const t=(0,n.g2)("RouteLink");return(0,n.uX)(),(0,n.CE)("div",null,[o[49]||(o[49]=(0,n.Lk)("h1",{id:"gledopto-gl-c-009p",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#gledopto-gl-c-009p"},[(0,n.Lk)("span",null,"Gledopto GL-C-009P")])],-1)),(0,n.Lk)("table",null,[o[7]||(o[7]=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th"),(0,n.Lk)("th")])],-1)),(0,n.Lk)("tbody",null,[o[2]||(o[2]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Model"),(0,n.Lk)("td",null,"GL-C-009P")],-1)),(0,n.Lk)("tr",null,[o[1]||(o[1]=(0,n.Lk)("td",null,"Vendor",-1)),(0,n.Lk)("td",null,[(0,n.bF)(t,{to:"/supported-devices/#v=Gledopto"},{default:(0,n.k6)(()=>[...o[0]||(o[0]=[(0,n.eW)("Gledopto",-1)])]),_:1})])]),o[3]||(o[3]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Description"),(0,n.Lk)("td",null,"Zigbee LED Controller W (pro)")],-1)),o[4]||(o[4]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Exposes"),(0,n.Lk)("td",null,"light (state, brightness), effect, power_on_behavior, identify")],-1)),o[5]||(o[5]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Picture"),(0,n.Lk)("td",null,[(0,n.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/GL-C-009P.png",alt:"Gledopto GL-C-009P"})])],-1)),o[6]||(o[6]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"White-label"),(0,n.Lk)("td",null,"Gledopto GL-C-009P_mini")],-1))])]),o[50]||(o[50]=(0,n.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><ol><li>Switch on your device.</li><li>Now switch off and on within 2 seconds.</li><li>Repeat off/on four times.</li><li>Reset is done when the device is switched on in the fifth time and the light stays on after blinking 4 times</li></ol><h2 id="multi-mode-5-in-1-devices" tabindex="-1"><a class="header-anchor" href="#multi-mode-5-in-1-devices"><span>Multi-mode 5-in-1 devices</span></a></h2><p>Gledopto produces devices that allow you to select one of up to 5 different LED Controller types with each mode displaying a different [Indicator Light] <strong>color</strong>.</p>',5)),(0,n.Lk)("ul",null,[(0,n.Lk)("li",null,[o[9]||(o[9]=(0,n.Lk)("code",null,"RGB+CCT",-1)),o[10]||(o[10]=(0,n.eW)()),(0,n.bF)(t,{to:"/devices/GL-C-008P.html"},{default:(0,n.k6)(()=>[...o[8]||(o[8]=[(0,n.eW)("GL-C-008P",-1)])]),_:1}),o[11]||(o[11]=(0,n.eW)(" [White]",-1))]),(0,n.Lk)("li",null,[o[13]||(o[13]=(0,n.Lk)("code",null,"RGBW",-1)),o[14]||(o[14]=(0,n.eW)()),(0,n.bF)(t,{to:"/devices/GL-C-007P.html"},{default:(0,n.k6)(()=>[...o[12]||(o[12]=[(0,n.eW)("GL-C-007P",-1)])]),_:1}),o[15]||(o[15]=(0,n.eW)(" [Yellow]",-1))]),(0,n.Lk)("li",null,[o[17]||(o[17]=(0,n.Lk)("code",null,"RGB",-1)),o[18]||(o[18]=(0,n.eW)()),(0,n.bF)(t,{to:"/devices/GL-C-003P.html"},{default:(0,n.k6)(()=>[...o[16]||(o[16]=[(0,n.eW)("GL-C-003P",-1)])]),_:1}),o[19]||(o[19]=(0,n.eW)(" [Blue]",-1))]),(0,n.Lk)("li",null,[o[21]||(o[21]=(0,n.Lk)("code",null,"CCT",-1)),o[22]||(o[22]=(0,n.eW)()),(0,n.bF)(t,{to:"/devices/GL-C-006P.html"},{default:(0,n.k6)(()=>[...o[20]||(o[20]=[(0,n.eW)("GL-C-006P",-1)])]),_:1}),o[23]||(o[23]=(0,n.eW)(" [Green]",-1))]),(0,n.Lk)("li",null,[o[25]||(o[25]=(0,n.Lk)("code",null,"Dimmer",-1)),o[26]||(o[26]=(0,n.eW)()),(0,n.bF)(t,{to:"/devices/GL-C-009P.html"},{default:(0,n.k6)(()=>[...o[24]||(o[24]=[(0,n.eW)("GL-C-009P",-1)])]),_:1}),o[27]||(o[27]=(0,n.eW)(" [Red]",-1))])]),o[51]||(o[51]=(0,n.Fv)('<p>This <code>GL-C-009P</code> mode is available as a <code>modelId</code> in the following models:</p><ul><li><strong>GL-C-001P</strong> - Zigbee Pro 5 in 1 Smart LED Controller</li><li><strong>GL-C-002P</strong> - Zigbee Pro 5 in 1 LED Controller Mini Ultra Thin</li><li><strong>GL-C-011P</strong> - Zigbee Pro 5 in 1 Smart LED Controller DIN Rail</li><li><strong>GL-C-201P</strong> - Zigbee Pro+ 5 in 1 Smart LED Controller</li><li><strong>GL-C-301P</strong> - Zigbee Pro+ 5 in 1 Smart LED Controller Ultra-Mini</li></ul><p>You can switch to this <code>GL-C-009P</code> mode by short pressing the <code>Opt</code> button on the device until the Indicator Light is <code>Red</code>.</p><p>To pair with, or change modes on, Zigbee2MQTT, press the <code>Reset</code> button 4 times</p><h2 id="dual-mode-2-in-1-devices" tabindex="-1"><a class="header-anchor" href="#dual-mode-2-in-1-devices"><span>Dual-mode 2-in-1 devices</span></a></h2><p>Gledopto produces devices that allow you to select one of up to 2 different LED Controller types with each mode displaying a different [Indicator Light] <strong>status</strong>.</p>',6)),(0,n.Lk)("ul",null,[(0,n.Lk)("li",null,[o[29]||(o[29]=(0,n.Lk)("code",null,"CCT",-1)),o[30]||(o[30]=(0,n.eW)()),(0,n.bF)(t,{to:"/devices/GL-C-006P.html"},{default:(0,n.k6)(()=>[...o[28]||(o[28]=[(0,n.eW)("GL-C-006P",-1)])]),_:1}),o[31]||(o[31]=(0,n.eW)(" [Indicator Light Off]",-1))]),(0,n.Lk)("li",null,[o[33]||(o[33]=(0,n.Lk)("code",null,"Dimmer",-1)),o[34]||(o[34]=(0,n.eW)()),(0,n.bF)(t,{to:"/devices/GL-C-009P.html"},{default:(0,n.k6)(()=>[...o[32]||(o[32]=[(0,n.eW)("GL-C-009P",-1)])]),_:1}),o[35]||(o[35]=(0,n.eW)(" [Indicator Light On]",-1))])]),o[52]||(o[52]=(0,n.Fv)("<p>This <code>GL-C-009P</code> mode is available as a <code>modelId</code> in the following models:</p><ul><li><strong>GL-C-003P</strong>† - Zigbee Pro 3-wire/2-wire 2 in 1 CCT/DIM LED Controller</li><li><strong>GL-C-203P</strong> - Zigbee Pro+ 3-wire/2-wire 2 in 1 CCT/DIM LED Controller</li></ul><p>You can switch to this <code>GL-C-009P</code> mode by short pressing the <code>Reset</code> button on the device until the Indicator Light is <code>On</code>.</p><p>To pair with, or change modes on, Zigbee2MQTT, long press the <code>Reset</code> button for more that 2 seconds.</p>",4)),(0,n.Lk)("p",null,[o[37]||(o[37]=(0,n.eW)("† Note that this ",-1)),o[38]||(o[38]=(0,n.Lk)("strong",null,"GL-C-003P",-1)),o[39]||(o[39]=(0,n.eW)(" Model is not an RGB Controller and not capable of being selected as an ",-1)),o[40]||(o[40]=(0,n.Lk)("code",null,"RGB",-1)),o[41]||(o[41]=(0,n.eW)(" controller or sending the ",-1)),o[42]||(o[42]=(0,n.Lk)("code",null,"GL-C-003P",-1)),o[43]||(o[43]=(0,n.eW)(" ModelId to Zigbee2MQTT. See ",-1)),(0,n.bF)(t,{to:"/devices/GL-C-003P.html"},{default:(0,n.k6)(()=>[...o[36]||(o[36]=[(0,n.eW)("GL-C-003P",-1)])]),_:1}),o[44]||(o[44]=(0,n.eW)(" for devices that can do this.",-1))]),o[53]||(o[53]=(0,n.Lk)("h2",{id:"ota-updates",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#ota-updates"},[(0,n.Lk)("span",null,"OTA updates")])],-1)),(0,n.Lk)("p",null,[o[46]||(o[46]=(0,n.eW)("This device supports OTA updates, for more information see ",-1)),(0,n.bF)(t,{to:"/guide/usage/ota_updates.html"},{default:(0,n.k6)(()=>[...o[45]||(o[45]=[(0,n.eW)("OTA updates",-1)])]),_:1}),o[47]||(o[47]=(0,n.eW)(".",-1))]),o[54]||(o[54]=(0,n.Lk)("h2",{id:"options",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#options"},[(0,n.Lk)("span",null,"Options")])],-1)),(0,n.Lk)("p",null,[(0,n.Lk)("em",null,[(0,n.bF)(t,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,n.k6)(()=>[...o[48]||(o[48]=[(0,n.eW)("How to use device type specific configuration",-1)])]),_:1})])]),o[55]||(o[55]=(0,n.Fv)('<ul><li><p><code>transition</code>: Controls the transition time (in seconds) of on/off, brightness, color temperature (if applicable) and color (if applicable) changes. Defaults to <code>0</code> (no transition). The value must be a number with a minimum value of <code>0</code></p></li><li><p><code>identify_timeout</code>: Sets the duration of the identification procedure in seconds (i.e., how long the device would flash).The value ranges from 1 to 30 seconds (default: 3). The value must be a number with a minimum value of <code>1</code> and with a with a maximum value of <code>30</code></p></li><li><p><code>state_action</code>: State actions will also be published as &#39;action&#39; when true (default false). The value must be <code>true</code> or <code>false</code></p></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="light" tabindex="-1"><a class="header-anchor" href="#light"><span>Light</span></a></h3><p>This light supports the following features: <code>state</code>, <code>brightness</code>.</p><ul><li><code>state</code>: To control the state publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state&quot;: &quot;ON&quot;}</code>, <code>{&quot;state&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state&quot;: &quot;TOGGLE&quot;}</code>. To read the state send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state&quot;: &quot;&quot;}</code>.</li><li><code>brightness</code>: To control the brightness publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;brightness&quot;: VALUE}</code> where <code>VALUE</code> is a number between <code>0</code> and <code>254</code>. To read the brightness send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;brightness&quot;: &quot;&quot;}</code>.</li></ul><h4 id="on-with-timed-off" tabindex="-1"><a class="header-anchor" href="#on-with-timed-off"><span>On with timed off</span></a></h4><p>When setting the state to ON, it might be possible to specify an automatic shutoff after a certain amount of time. To do this add an additional property <code>on_time</code> to the payload which is the time in seconds the state should remain on. Additionally an <code>off_wait_time</code> property can be added to the payload to specify the cooldown time in seconds when the light will not answer to other on with timed off commands. Support depends on the light firmware. Some devices might require both <code>on_time</code> and <code>off_wait_time</code> to work Examples : <code>{&quot;state&quot; : &quot;ON&quot;, &quot;on_time&quot;: 300}</code>, <code>{&quot;state&quot; : &quot;ON&quot;, &quot;on_time&quot;: 300, &quot;off_wait_time&quot;: 120}</code>.</p><h4 id="transition" tabindex="-1"><a class="header-anchor" href="#transition"><span>Transition</span></a></h4><p>For all of the above mentioned features it is possible to do a transition of the value over time. To do this add an additional property <code>transition</code> to the payload which is the transition time in seconds. Examples: <code>{&quot;brightness&quot;:156,&quot;transition&quot;:3}</code>, <code>{&quot;color_temp&quot;:241,&quot;transition&quot;:1}</code>.</p><h4 id="moving-stepping" tabindex="-1"><a class="header-anchor" href="#moving-stepping"><span>Moving/stepping</span></a></h4><p>Instead of setting a value (e.g. brightness) directly it is also possible to:</p><ul><li>move: this will automatically move the value over time, to stop send value <code>stop</code> or <code>0</code>.</li><li>step: this will increment/decrement the current value by the given one.</li></ul><p>The direction of move and step can be either up or down, provide a negative value to move/step down, a positive value to move/step up. To do this send a payload like below to <code>zigbee2mqtt/FRIENDLY_NAME/set</code></p><p><strong>NOTE</strong>: brightness move/step will stop at the minimum brightness and won&#39;t turn on the light when it&#39;s off. In this case use <code>brightness_move_onoff</code>/<code>brightness_step_onoff</code></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token string-property property">&quot;brightness_move&quot;</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token comment">// Starts moving brightness down at 40 units per second</span></span>\n<span class="line">  <span class="token string-property property">&quot;brightness_move&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// Stop moving brightness</span></span>\n<span class="line">  <span class="token string-property property">&quot;brightness_step&quot;</span><span class="token operator">:</span> <span class="token number">40</span> <span class="token comment">// Increases brightness by 40</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="effect-enum" tabindex="-1"><a class="header-anchor" href="#effect-enum"><span>Effect (enum)</span></a></h3><p>Triggers an effect on the light (e.g. make light blink for a few seconds). Value will <strong>not</strong> be published in the state. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;effect&quot;: NEW_VALUE}</code>. The possible values are: <code>blink</code>, <code>breathe</code>, <code>okay</code>, <code>channel_change</code>, <code>finish_effect</code>, <code>stop_effect</code>.</p><h3 id="power-on-behavior-enum" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum"><span>Power-on behavior (enum)</span></a></h3><p>Controls the behavior when the device is powered on after power loss. Value can be found in the published state on the <code>power_on_behavior</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;power_on_behavior&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>on</code>, <code>toggle</code>, <code>previous</code>.</p><h3 id="identify-enum" tabindex="-1"><a class="header-anchor" href="#identify-enum"><span>Identify (enum)</span></a></h3><p>Initiate device identification. Value will <strong>not</strong> be published in the state. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;identify&quot;: NEW_VALUE}</code>. The possible values are: <code>identify</code>.</p>',21))])}]]),a=JSON.parse('{"path":"/devices/GL-C-009P.html","title":"Gledopto GL-C-009P control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Gledopto GL-C-009P control via MQTT","description":"Integrate your Gledopto GL-C-009P via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2021-03-30T20:29:35.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/GL-C-009P.md"}')}}]);