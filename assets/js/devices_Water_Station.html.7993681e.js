"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[1582],{8838:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>i,data:()=>p});var a=t(60362);const d={},i=(0,t(60654).A)(d,[["render",function(e,o){const t=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[o[7]||(o[7]=(0,a.Lk)("h1",{id:"bacchus-water-station",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#bacchus-water-station"},[(0,a.Lk)("span",null,"Bacchus Water_Station")])],-1)),(0,a.Lk)("table",null,[o[6]||(o[6]=(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th"),(0,a.Lk)("th")])],-1)),(0,a.Lk)("tbody",null,[o[2]||(o[2]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Model"),(0,a.Lk)("td",null,"Water_Station")],-1)),(0,a.Lk)("tr",null,[o[1]||(o[1]=(0,a.Lk)("td",null,"Vendor",-1)),(0,a.Lk)("td",null,[(0,a.bF)(t,{to:"/supported-devices/#v=Bacchus"},{default:(0,a.k6)(()=>[...o[0]||(o[0]=[(0,a.eW)("Bacchus",-1)])]),_:1})])]),o[3]||(o[3]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Description"),(0,a.Lk)("td",null,"Water_Station")],-1)),o[4]||(o[4]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Exposes"),(0,a.Lk)("td",null,"pump_1, pump_1_duration, pump_2, pump_3_duration, pump_3, pump_all, beeper, beeper_on_leak, water_leak, full")],-1)),o[5]||(o[5]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Picture"),(0,a.Lk)("td",null,[(0,a.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/Water_Station.png",alt:"Bacchus Water_Station"})])],-1))])]),o[8]||(o[8]=(0,a.Fv)('<p><a href="https://github.com/Bacchus777/WaterStation_v2" target="_blank" rel="noopener noreferrer">Original project description</a></p><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="pump-1-binary-1-endpoint" tabindex="-1"><a class="header-anchor" href="#pump-1-binary-1-endpoint"><span>Pump 1 (binary, 1 endpoint)</span></a></h3><p>Enable first pump. Value can be found in the published state on the <code>pump_1_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;pump_1_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;pump_1_1&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> pump 1 is ON, if <code>OFF</code> OFF.</p><h3 id="pump-1-duration-numeric-1-endpoint" tabindex="-1"><a class="header-anchor" href="#pump-1-duration-numeric-1-endpoint"><span>Pump 1 duration (numeric, 1 endpoint)</span></a></h3><p>Duration of pump 1. Value can be found in the published state on the <code>pump_1_duration_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;pump_1_duration_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;pump_1_duration_1&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>600</code>. The unit of this value is <code>sec</code>.</p><h3 id="pump-2-binary-2-endpoint" tabindex="-1"><a class="header-anchor" href="#pump-2-binary-2-endpoint"><span>Pump 2 (binary, 2 endpoint)</span></a></h3><p>Enable second pump. Value can be found in the published state on the <code>pump_2_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;pump_2_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;pump_2_2&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> pump 2 is ON, if <code>OFF</code> OFF.</p><h3 id="pump-3-duration-numeric-2-endpoint" tabindex="-1"><a class="header-anchor" href="#pump-3-duration-numeric-2-endpoint"><span>Pump 3 duration (numeric, 2 endpoint)</span></a></h3><p>Duration of pump 2. Value can be found in the published state on the <code>pump_3_duration_2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;pump_3_duration_2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;pump_3_duration_2&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>600</code>. The unit of this value is <code>sec</code>.</p><h3 id="pump-3-binary-3-endpoint" tabindex="-1"><a class="header-anchor" href="#pump-3-binary-3-endpoint"><span>Pump 3 (binary, 3 endpoint)</span></a></h3><p>Enable third pump. Value can be found in the published state on the <code>pump_3_3</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;pump_3_3&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;pump_3_3&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> pump 3 is ON, if <code>OFF</code> OFF.</p><h3 id="pump-3-duration-numeric-3-endpoint" tabindex="-1"><a class="header-anchor" href="#pump-3-duration-numeric-3-endpoint"><span>Pump 3 duration (numeric, 3 endpoint)</span></a></h3><p>Duration of pump 3. Value can be found in the published state on the <code>pump_3_duration_3</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;pump_3_duration_3&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;pump_3_duration_3&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>600</code>. The unit of this value is <code>sec</code>.</p><h3 id="pump-all-binary-4-endpoint" tabindex="-1"><a class="header-anchor" href="#pump-all-binary-4-endpoint"><span>Pump all (binary, 4 endpoint)</span></a></h3><p>Enable all pumps. Value can be found in the published state on the <code>pump_all_4</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;pump_all_4&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;pump_all_4&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> pump all is ON, if <code>OFF</code> OFF.</p><h3 id="beeper-binary-5-endpoint" tabindex="-1"><a class="header-anchor" href="#beeper-binary-5-endpoint"><span>Beeper (binary, 5 endpoint)</span></a></h3><p>Beeper. Value can be found in the published state on the <code>beeper_5</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;beeper_5&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;beeper_5&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> beeper is ON, if <code>OFF</code> OFF.</p><h3 id="beeper-on-leak-binary-1-endpoint" tabindex="-1"><a class="header-anchor" href="#beeper-on-leak-binary-1-endpoint"><span>Beeper on leak (binary, 1 endpoint)</span></a></h3><p>Beeper. Value can be found in the published state on the <code>beeper_on_leak_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;beeper_on_leak_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;beeper_on_leak_1&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> beeper on leak is ON, if <code>OFF</code> OFF.</p><h3 id="water-leak-binary" tabindex="-1"><a class="header-anchor" href="#water-leak-binary"><span>Water leak (binary)</span></a></h3><p>Indicates whether the device detected a water leak. Value can be found in the published state on the <code>water_leak</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> water leak is ON, if <code>false</code> OFF.</p><h3 id="full-binary" tabindex="-1"><a class="header-anchor" href="#full-binary"><span>Full (binary)</span></a></h3><p>Indicates whether the water tank is full. Value can be found in the published state on the <code>full</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> full is ON, if <code>false</code> OFF.</p>',24))])}]]),p=JSON.parse('{"path":"/devices/Water_Station.html","title":"Bacchus Water_Station control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Bacchus Water_Station control via MQTT","description":"Integrate your Bacchus Water_Station via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-05-01T17:56:31.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/Water_Station.md"}')}}]);