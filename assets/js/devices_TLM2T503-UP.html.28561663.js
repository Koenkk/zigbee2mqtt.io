"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[70083],{72327:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>d,data:()=>s});var o=a(60362);const i={},d=(0,a(60654).A)(i,[["render",function(e,t){const a=(0,o.g2)("RouteLink");return(0,o.uX)(),(0,o.CE)("div",null,[t[8]||(t[8]=(0,o.Lk)("h1",{id:"yokis-tlm2t503-up",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#yokis-tlm2t503-up"},[(0,o.Lk)("span",null,"YOKIS TLM2T503-UP")])],-1)),(0,o.Lk)("table",null,[t[6]||(t[6]=(0,o.Lk)("thead",null,[(0,o.Lk)("tr",null,[(0,o.Lk)("th"),(0,o.Lk)("th")])],-1)),(0,o.Lk)("tbody",null,[t[2]||(t[2]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Model"),(0,o.Lk)("td",null,"TLM2T503-UP")],-1)),(0,o.Lk)("tr",null,[t[1]||(t[1]=(0,o.Lk)("td",null,"Vendor",-1)),(0,o.Lk)("td",null,[(0,o.bF)(a,{to:"/supported-devices/#v=YOKIS"},{default:(0,o.k6)(()=>[...t[0]||(t[0]=[(0,o.eW)("YOKIS",-1)])]),_:1})])]),t[3]||(t[3]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Description"),(0,o.Lk)("td",null,"Wall-mounted 2-button transmitter (503 format)")],-1)),t[4]||(t[4]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Exposes"),(0,o.Lk)("td",null,"identify, temperature, battery_low, current_value, min_measured_value, max_measured_value, offset, samplingPeriod, samplingNumber, deltaTemp, minimalSendingPeriod, maximalSendingPeriod, action")],-1)),t[5]||(t[5]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Picture"),(0,o.Lk)("td",null,[(0,o.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/TLM2T503-UP.png",alt:"YOKIS TLM2T503-UP"})])],-1))])]),t[9]||(t[9]=(0,o.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><ul><li><a href="https://csa-iot.org/csa_product/tlm2t503-up/" target="_blank" rel="noopener noreferrer">CSA product page: TLM2T503-UP</a></li></ul><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>Options</span></a></h2>',3)),(0,o.Lk)("p",null,[(0,o.Lk)("em",null,[(0,o.bF)(a,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,o.k6)(()=>[...t[7]||(t[7]=[(0,o.eW)("How to use device type specific configuration",-1)])]),_:1})])]),t[10]||(t[10]=(0,o.Fv)('<ul><li><p><code>temperature_calibration</code>: Calibrates the temperature value (absolute offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>temperature_precision</code>: Number of digits after decimal point for temperature, takes into effect on next report of device. This option can only decrease the precision, not increase it. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li><li><p><code>identify_timeout</code>: Sets the duration of the identification procedure in seconds (i.e., how long the device would flash).The value ranges from 1 to 30 seconds (default: 3). The value must be a number with a minimum value of <code>1</code> and with a with a maximum value of <code>30</code></p></li><li><p><code>simulated_brightness</code>: Simulate a brightness value. If this device provides a brightness_move_up or brightness_move_down action it is possible to specify the update interval and delta. The action_brightness_delta indicates the delta for each interval. Example:</p></li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">simulated_brightness</span><span class="token punctuation">:</span></span>\n<span class="line">  <span class="token key atrule">delta</span><span class="token punctuation">:</span> <span class="token number">20</span> <span class="token comment"># delta per interval, default = 20</span></span>\n<span class="line">  <span class="token key atrule">interval</span><span class="token punctuation">:</span> <span class="token number">200</span> <span class="token comment"># interval in milliseconds, default = 200</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="identify-enum" tabindex="-1"><a class="header-anchor" href="#identify-enum"><span>Identify (enum)</span></a></h3><p>Initiate device identification. Value will <strong>not</strong> be published in the state. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;identify&quot;: NEW_VALUE}</code>. The possible values are: <code>identify</code>.</p><h3 id="temperature-numeric" tabindex="-1"><a class="header-anchor" href="#temperature-numeric"><span>Temperature (numeric)</span></a></h3><p>Measured temperature value. Value can be found in the published state on the <code>temperature</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;temperature&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Empty battery indicator. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p><h3 id="current-value-numeric" tabindex="-1"><a class="header-anchor" href="#current-value-numeric"><span>Current value (numeric)</span></a></h3><p>This attribute represents the last value measured.. Value can be found in the published state on the <code>current_value</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;current_value&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The minimal value is <code>-50</code> and the maximum value is <code>120</code>. The unit of this value is <code>°C</code>.</p><h3 id="min-measured-value-numeric" tabindex="-1"><a class="header-anchor" href="#min-measured-value-numeric"><span>Min measured value (numeric)</span></a></h3><p>Represent the minimal value set since the last power-on/reset.. Value can be found in the published state on the <code>min_measured_value</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_measured_value&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The minimal value is <code>-50</code> and the maximum value is <code>120</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-measured-value-numeric" tabindex="-1"><a class="header-anchor" href="#max-measured-value-numeric"><span>Max measured value (numeric)</span></a></h3><p>Represent the maximal value set since the last power-on/reset.. Value can be found in the published state on the <code>max_measured_value</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_measured_value&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The minimal value is <code>-50</code> and the maximum value is <code>120</code>. The unit of this value is <code>°C</code>.</p><h3 id="offset-numeric" tabindex="-1"><a class="header-anchor" href="#offset-numeric"><span>Offset (numeric)</span></a></h3><p>Represent the offset applicated to the temperature measured.. Value can be found in the published state on the <code>offset</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;offset&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;offset&quot;: NEW_VALUE}</code>. The minimal value is <code>-50</code> and the maximum value is <code>50</code>. The unit of this value is <code>°C</code>.</p><h3 id="samplingperiod-numeric" tabindex="-1"><a class="header-anchor" href="#samplingperiod-numeric"><span>SamplingPeriod (numeric)</span></a></h3><p>Represent the sampling period used to process the temperature measurement.. Value can be found in the published state on the <code>samplingPeriod</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;samplingPeriod&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;samplingPeriod&quot;: NEW_VALUE}</code>. The minimal value is <code>1</code> and the maximum value is <code>120</code>. The unit of this value is <code>s</code>.</p><h3 id="samplingnumber-numeric" tabindex="-1"><a class="header-anchor" href="#samplingnumber-numeric"><span>SamplingNumber (numeric)</span></a></h3><p>Represents the sampling number to sense per sampling period defined before.. Value can be found in the published state on the <code>samplingNumber</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;samplingNumber&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;samplingNumber&quot;: NEW_VALUE}</code>. The minimal value is <code>1</code> and the maximum value is <code>20</code>.</p><h3 id="deltatemp-numeric" tabindex="-1"><a class="header-anchor" href="#deltatemp-numeric"><span>DeltaTemp (numeric)</span></a></h3><p>Represents the temperature variation to request a new temperature sending through reports.. Value can be found in the published state on the <code>deltaTemp</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;deltaTemp&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;deltaTemp&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>10</code>. The unit of this value is <code>°C</code>.</p><h3 id="minimalsendingperiod-numeric" tabindex="-1"><a class="header-anchor" href="#minimalsendingperiod-numeric"><span>MinimalSendingPeriod (numeric)</span></a></h3><p>Represents the minimal sending period that the device must respect before sending a new value through reporting.. Value can be found in the published state on the <code>minimalSendingPeriod</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;minimalSendingPeriod&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;minimalSendingPeriod&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>65535</code>.</p><h3 id="maximalsendingperiod-numeric" tabindex="-1"><a class="header-anchor" href="#maximalsendingperiod-numeric"><span>MaximalSendingPeriod (numeric)</span></a></h3><p>Represents the maximal sending period. The device must send a new value through reporting before the end of this period.. Value can be found in the published state on the <code>maximalSendingPeriod</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;maximalSendingPeriod&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;maximalSendingPeriod&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>65535</code>.</p><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>on</code>, <code>off</code>, <code>toggle</code>, <code>brightness_move_to_level</code>, <code>brightness_move_up</code>, <code>brightness_move_down</code>, <code>brightness_step_up</code>, <code>brightness_step_down</code>, <code>brightness_stop</code>, <code>open</code>, <code>close</code>, <code>stop</code>.</p>',29))])}]]),s=JSON.parse('{"path":"/devices/TLM2T503-UP.html","title":"YOKIS TLM2T503-UP control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"YOKIS TLM2T503-UP control via MQTT","description":"Integrate your YOKIS TLM2T503-UP via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-09-30T19:35:14.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/TLM2T503-UP.md"}')}}]);