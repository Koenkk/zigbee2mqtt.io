"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[70206],{21134:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>n,data:()=>s});var o=a(60362);const i={},n=(0,a(60654).A)(i,[["render",function(e,t){const a=(0,o.g2)("RouteLink");return(0,o.uX)(),(0,o.CE)("div",null,[t[7]||(t[7]=(0,o.Lk)("h1",{id:"tuya-ih012-rt01",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#tuya-ih012-rt01"},[(0,o.Lk)("span",null,"Tuya IH012-RT01")])],-1)),(0,o.Lk)("table",null,[t[6]||(t[6]=(0,o.Lk)("thead",null,[(0,o.Lk)("tr",null,[(0,o.Lk)("th"),(0,o.Lk)("th")])],-1)),(0,o.Lk)("tbody",null,[t[2]||(t[2]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Model"),(0,o.Lk)("td",null,"IH012-RT01")],-1)),(0,o.Lk)("tr",null,[t[1]||(t[1]=(0,o.Lk)("td",null,"Vendor",-1)),(0,o.Lk)("td",null,[(0,o.bF)(a,{to:"/supported-devices/#v=Tuya"},{default:(0,o.k6)(()=>[...t[0]||(t[0]=[(0,o.eW)("Tuya",-1)])]),_:1})])]),t[3]||(t[3]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Description"),(0,o.Lk)("td",null,"Motion sensor")],-1)),t[4]||(t[4]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Exposes"),(0,o.Lk)("td",null,"battery, voltage, sensitivity, keep_time, occupancy, battery_low")],-1)),t[5]||(t[5]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Picture"),(0,o.Lk)("td",null,[(0,o.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/IH012-RT01.png",alt:"Tuya IH012-RT01"})])],-1))])]),t[8]||(t[8]=(0,o.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><p>To start pairing, press the button (pinhole on the side of the device) using a pin/paperclip for approx. 10 seconds. The led will turn on, then start blinking while the pairing process is in progress.</p><h3 id="reading-and-setting-values" tabindex="-1"><a class="header-anchor" href="#reading-and-setting-values"><span>Reading and Setting Values</span></a></h3><p>As a low power device, the motion sensor isn&#39;t reachable most of the time, but only when active (e.g. because it detected motion). Therefore, requests to read or set values (i.e. <code>sensitivity</code> or <code>keep_time</code>) won&#39;t be processed right away, typically. Instead, they will be queued and sent on the next occasion.</p><h3 id="troubleshooting-occupancy-stays-on-or-off-permanently" tabindex="-1"><a class="header-anchor" href="#troubleshooting-occupancy-stays-on-or-off-permanently"><span>Troubleshooting: Occupancy stays on or off permanently</span></a></h3><p>If the occupancy state stays on despite a lack of movement, or off despite movement, it needs to be re-paired. This can happen, e.g., when the power is interrupted by a battery change.</p><h4 id="method-1" tabindex="-1"><a class="header-anchor" href="#method-1"><span>Method 1</span></a></h4><ol><li>Remove from Zigbee2MQTT (without force). Device should start blinking upon successful removal.</li><li>Remove battery, wait a few seconds, reinsert.</li><li>Execute normal pairing procedure.</li></ol><p>Re-pairing without removal or power cut does not fix this issue.</p><h4 id="method-2" tabindex="-1"><a class="header-anchor" href="#method-2"><span>Method 2</span></a></h4><p>Completely removing and adding the device again might generate a new device id which can be a hassle depending on your setup. So here&#39;s an alternate method that avoids re-pairing the device:</p><ol><li>Click the device&#39;s interview button in the z2m UI, so that the confirmation prompt opens (&quot;Are you sure?&quot;)</li><li>Push and hold the pairing button so the LED lights up</li><li>Now <em>before</em> the device goes into pairing mode, click OK in the confirmation prompt</li><li>Wait a second or two and let go of the pairing button, again <em>before</em> it actually enters pairing mode</li><li>You should get a message popup in the z2m UI saying the device only supports zigbee specification revision 21, and that the interview was successful</li></ol><p>This is a bit tricky to get right with only two hands but might be worth it if you want to avoid re-adding the device.</p><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %, can take up to 24 hours before reported. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="voltage-numeric" tabindex="-1"><a class="header-anchor" href="#voltage-numeric"><span>Voltage (numeric)</span></a></h3><p>Voltage of the battery in millivolts. Value can be found in the published state on the <code>voltage</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>mV</code>.</p><h3 id="sensitivity-enum" tabindex="-1"><a class="header-anchor" href="#sensitivity-enum"><span>Sensitivity (enum)</span></a></h3><p>PIR sensor sensitivity. Value can be found in the published state on the <code>sensitivity</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;sensitivity&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;sensitivity&quot;: NEW_VALUE}</code>. The possible values are: <code>low</code>, <code>medium</code>, <code>high</code>.</p><h3 id="keep-time-enum" tabindex="-1"><a class="header-anchor" href="#keep-time-enum"><span>Keep time (enum)</span></a></h3><p>PIR keep time in seconds. Value can be found in the published state on the <code>keep_time</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;keep_time&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;keep_time&quot;: NEW_VALUE}</code>. The possible values are: <code>30</code>, <code>60</code>, <code>120</code>.</p><h3 id="occupancy-binary" tabindex="-1"><a class="header-anchor" href="#occupancy-binary"><span>Occupancy (binary)</span></a></h3><p>Indicates whether the device detected occupancy. Value can be found in the published state on the <code>occupancy</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> occupancy is ON, if <code>false</code> OFF.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Indicates whether the battery of the device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p>',27))])}]]),s=JSON.parse('{"path":"/devices/IH012-RT01.html","title":"Tuya IH012-RT01 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Tuya IH012-RT01 control via MQTT","description":"Integrate your Tuya IH012-RT01 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2022-05-02T17:02:38.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/IH012-RT01.md"}')}}]);