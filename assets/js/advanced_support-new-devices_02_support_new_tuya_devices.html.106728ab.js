"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[38993],{26272:(n,e,a)=>{a.r(e),a.d(e,{comp:()=>p,data:()=>o});var s=a(60362);const t={},p=(0,a(60654).A)(t,[["render",function(n,e){const a=(0,s.g2)("RouteLink");return(0,s.uX)(),(0,s.CE)("div",null,[e[21]||(e[21]=(0,s.Fv)('<h1 id="support-new-tuya-devices" tabindex="-1"><a class="header-anchor" href="#support-new-tuya-devices"><span>Support new Tuya devices</span></a></h1><p>Tuya devices use a custom <code>manuSpecificTuya</code> cluster, the instructions below will help you understand it better and provide some tools to ease discovery of their functions</p><h2 id="instructions" tabindex="-1"><a class="header-anchor" href="#instructions"><span>Instructions</span></a></h2><h3 id="_1-standard-part-of-the-setup" tabindex="-1"><a class="header-anchor" href="#_1-standard-part-of-the-setup"><span>1. Standard part of the setup</span></a></h3>',4)),(0,s.Lk)("p",null,[e[1]||(e[1]=(0,s.eW)("Read through basic ",-1)),(0,s.bF)(a,{to:"/advanced/support-new-devices/01_support_new_devices.html"},{default:(0,s.k6)(()=>[...e[0]||(e[0]=[(0,s.eW)("howto",-1)])]),_:1}),e[2]||(e[2]=(0,s.eW)(" for instructions on how to setup an external converter",-1))]),e[22]||(e[22]=(0,s.Fv)('<h3 id="_2-adding-your-device" tabindex="-1"><a class="header-anchor" href="#_2-adding-your-device"><span>2. Adding your device</span></a></h3><p>Adding support for Tuya devices is a bit different. In order to provide support for E.G. the <code>TS0601</code> model ID you would create the following external converter:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> fz <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zigbee-herdsman-converters/converters/fromZigbee&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> tz <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zigbee-herdsman-converters/converters/toZigbee&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> exposes <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zigbee-herdsman-converters/lib/exposes&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> reporting <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zigbee-herdsman-converters/lib/reporting&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> modernExtend <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zigbee-herdsman-converters/lib/modernExtend&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> e <span class="token operator">=</span> exposes<span class="token punctuation">.</span>presets<span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> ea <span class="token operator">=</span> exposes<span class="token punctuation">.</span>access<span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> tuya <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zigbee-herdsman-converters/lib/tuya&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> definition <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">// Since a lot of Tuya devices use the same modelID, but use different datapoints</span></span>\n<span class="line">    <span class="token comment">// it&#39;s necessary to provide a fingerprint instead of a zigbeeModel</span></span>\n<span class="line">    <span class="token literal-property property">fingerprint</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token comment">// The model ID from: Device with modelID &#39;TS0601&#39; is not supported</span></span>\n<span class="line">            <span class="token comment">// You may need to add \\u0000 at the end of the name in some cases</span></span>\n<span class="line">            <span class="token literal-property property">modelID</span><span class="token operator">:</span> <span class="token string">&#39;TS0601&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">            <span class="token comment">// The manufacturer name from: Device with modelID &#39;TS0601&#39; is not supported.</span></span>\n<span class="line">            <span class="token literal-property property">manufacturerName</span><span class="token operator">:</span> <span class="token string">&#39;_TZE200_d0yu2xgi&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">model</span><span class="token operator">:</span> <span class="token string">&#39;TS0601_new&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">vendor</span><span class="token operator">:</span> <span class="token string">&#39;Tuya&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;Fill in a description of the device here&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        tuya<span class="token punctuation">.</span>modernExtend<span class="token punctuation">.</span><span class="token function">tuyaBase</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">            <span class="token literal-property property">dp</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>\n<span class="line">            <span class="token comment">// Enable this line in case the device has a clock, if time is incorrect with</span></span>\n<span class="line">            <span class="token comment">// `1970`, try with `2000`.</span></span>\n<span class="line">            <span class="token comment">// timeStart: &quot;1970&quot;,</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">exposes</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        <span class="token comment">// Here you should put all functionality that your device exposes</span></span>\n<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// All datapoints go in here</span></span>\n<span class="line">        <span class="token literal-property property">tuyaDatapoints</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        <span class="token comment">// A preferred new way of extending functionality.</span></span>\n<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> definition<span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-understanding-tuya-datapoints" tabindex="-1"><a class="header-anchor" href="#_3-understanding-tuya-datapoints"><span>3. Understanding Tuya datapoints</span></a></h3><p>The <code>dataReport</code>and <code>dataResponse</code> types of the <code>manuSpecificTuya</code> cluster have their own format:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">    <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;seq&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> DataType<span class="token punctuation">.</span>uint16<span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;dpValues&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> BuffaloZclDataType<span class="token punctuation">.</span><span class="token constant">LIST_TUYA_DATAPOINT_VALUES</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>seq</code> is the transaction number of the payload. <code>dpValues</code> is an array of &quot;Data Points&quot; (type: <code>TuyaDataPointValue</code>). Such a datapoint value consists of:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token literal-property property">dp</span><span class="token operator">:</span> DataType<span class="token punctuation">.</span>uint8<span class="token punctuation">;</span></span>\n<span class="line"><span class="token literal-property property">datatype</span><span class="token operator">:</span> DataType<span class="token punctuation">.</span>uint8<span class="token punctuation">;</span></span>\n<span class="line"><span class="token literal-property property">data</span><span class="token operator">:</span> Buffer<span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>dp</code> is so called &quot;Data Point ID&quot; which is at the core of Tuya devices. From the point of view of a device the DPIDs are the functions that the device provides.</li><li><code>datatype</code> is the type of data contained in the <code>data</code> field, see <code>dataTypes</code> in <code>node_modules/zigbee-herdsman-converters/lib/tuya.js</code></li></ul><p>Some datapoints are &#39;report only&#39; (they report changes that happen within the device) others are &#39;issue and report&#39; (they can report by themselves, but also respond with a report when set). Data points are not unified across all Tuya devices so they can differ per device.</p><h3 id="_4-mapping-the-datapoints" tabindex="-1"><a class="header-anchor" href="#_4-mapping-the-datapoints"><span>4. Mapping the datapoints</span></a></h3>',11)),(0,s.Lk)("p",null,[e[4]||(e[4]=(0,s.eW)("Now we have to map the datapoints in ",-1)),e[5]||(e[5]=(0,s.Lk)("code",null,"tuyaDatapoints",-1)),e[6]||(e[6]=(0,s.eW)(". Start Zigbee2MQTT with ",-1)),(0,s.bF)(a,{to:"/guide/configuration/logging.html#debugging"},{default:(0,s.k6)(()=>[...e[3]||(e[3]=[(0,s.eW)("debug logging",-1)])]),_:1}),e[7]||(e[7]=(0,s.eW)(" enabled and trigger some actions on the device. You will now see logging like:",-1))]),e[23]||(e[23]=(0,s.Fv)('<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">Zigbee2MQTT:debug 2022-11-30 18:29:19: Datapoint &#39;106&#39; with value &#39;77&#39; not defined for &#39;_TZE200_d0yu2xgi&#39;</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Next we have to find out what this datapoint means (<code>106</code> in this example), there are different ways to do this:</p>',2)),(0,s.Lk)("ul",null,[(0,s.Lk)("li",null,[(0,s.bF)(a,{to:"/advanced/support-new-devices/03_find_tuya_data_points.html"},{default:(0,s.k6)(()=>[...e[8]||(e[8]=[(0,s.eW)("Find Tuya datapoint using the Tuya gateway",-1)])]),_:1}),e[9]||(e[9]=(0,s.eW)(" (easiest but requires Tuya gateway)",-1))]),e[10]||(e[10]=(0,s.Lk)("li",null,[(0,s.eW)("Check if an already supported Tuya device has this datapoint mapped ("),(0,s.Lk)("a",{href:"https://github.com/Koenkk/zigbee-herdsman-converters/search?q=tuyaDatapoints",target:"_blank",rel:"noopener noreferrer"},"search"),(0,s.eW)(")")],-1)),e[11]||(e[11]=(0,s.Lk)("li",null,"Guess based on the value",-1))]),e[24]||(e[24]=(0,s.Fv)('<p>For this device we know that datapoint <code>106</code> is the humidity, we can now update the <code>exposes</code> and <code>tuyaDatapoints</code> section of the external converter:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">    <span class="token literal-property property">exposes</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        e<span class="token punctuation">.</span><span class="token function">humidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// &lt;- added the humdity expose</span></span>\n<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token literal-property property">tuyaDatapoints</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">            <span class="token punctuation">[</span><span class="token number">106</span><span class="token punctuation">,</span> <span class="token string">&#39;humidity&#39;</span><span class="token punctuation">,</span> tuya<span class="token punctuation">.</span>valueConverter<span class="token punctuation">.</span>raw<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// &lt;- mapped the datapoint</span></span>\n<span class="line">        <span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The values in the mapped datapoint are as follows:</p><ol><li>The datapoint (<code>106</code> in this example)</li><li>The key under which this value should be published in the state (<code>humidity</code> in this example)</li><li>The value converter, this converts the received value before publishing it (<code>tuya.valueConverter.raw</code> in this example). There are more value converters available, examples: <ul><li>If the value needs to be divided by 10 you can use <code>tuya.valueConverter.divideBy10</code></li><li>If the value needs to be mapped to a string you can use <code>tuya.valueConverterBasic.lookup({&#39;single&#39;: 0, &#39;double&#39;: 1, &#39;hold&#39;: 2})</code></li><li>For more examples search for <code>tuyaDatapoints</code> in <a href="https://github.com/Koenkk/zigbee-herdsman-converters/blob/master/src/devices/tuya.ts" target="_blank" rel="noopener noreferrer"><code>tuya.ts</code></a>.</li></ul></li></ol><p>Repeat this for all datapoints.</p><h3 id="_6-create-a-pull-request" tabindex="-1"><a class="header-anchor" href="#_6-create-a-pull-request"><span>6. Create a pull request</span></a></h3>',6)),(0,s.Lk)("p",null,[e[13]||(e[13]=(0,s.eW)("To contribute your new device definition to Zigbee2MQTT such that it will be supported out-of-the-box in the next release, follow these steps: ",-1)),(0,s.bF)(a,{to:"/advanced/support-new-devices/01_support_new_devices.html#_4-create-a-pull-request"},{default:(0,s.k6)(()=>[...e[12]||(e[12]=[(0,s.eW)("Create a pull request",-1)])]),_:1}),e[14]||(e[14]=(0,s.eW)(".",-1))]),e[25]||(e[25]=(0,s.Fv)('<h3 id="_7-bonus-contacting-the-manufacturer" tabindex="-1"><a class="header-anchor" href="#_7-bonus-contacting-the-manufacturer"><span>7. BONUS: Contacting the manufacturer</span></a></h3><p>When contacting a manufacturer of Tuya compatible device DO NOT ask for Zigbee protocol of the device, they usually have no idea how the Tuya radio that they bought communicates over Zigbee. Instead ask for the UART protocol for their device, this should give you a better cooperation. You can also ask them about DPIDs and data formats for their functions.</p><h3 id="_8-bonus-2-further-reading" tabindex="-1"><a class="header-anchor" href="#_8-bonus-2-further-reading"><span>8. BONUS 2: Further reading</span></a></h3><p>You can read more about how the device communicates with Tuya Zigbee radio module <a href="https://developer.tuya.com/en/docs/iot/device-development/access-mode-mcu/zigbee-general-solution/tuya-zigbee-module-uart-communication-protocol/tuya-zigbee-module-uart-communication-protocol?id=K9ear5khsqoty" target="_blank" rel="noopener noreferrer">here</a></p><h2 id="fixing-tuya-device-detection" tabindex="-1"><a class="header-anchor" href="#fixing-tuya-device-detection"><span>Fixing Tuya device detection</span></a></h2><p>In case your device is fully working but it has the wrong picture and/or description the detection can be fixed easily:</p>',6)),(0,s.Lk)("ol",null,[e[20]||(e[20]=(0,s.Fv)('<li>First determine the <code>Model</code> of this device (not the <code>Zigbee model</code>!) by going to the device -&gt; about page in the Zigbee2MQTT frontend.</li><li>Find the definition of this device in one of the <a href="https://github.com/Koenkk/zigbee-herdsman-converters/tree/master/src/devices" target="_blank" rel="noopener noreferrer">definition files</a> based on the <code>Model</code> from step 1, e.g. <a href="https://github.com/Koenkk/zigbee-herdsman-converters/blob/master/src/devices/tuya.ts" target="_blank" rel="noopener noreferrer"><code>tuya.ts</code></a>.</li><li>Click on the Edit icon</li><li>Add the <code>whiteLabel</code> to the definition (<a href="https://github.com/Koenkk/zigbee-herdsman-converters/blob/bfcd02de893edba24879d4b08e467f9ddd98cc2d/src/devices/tuya.ts#L5174" target="_blank" rel="noopener noreferrer">example</a>). The format is <code>tuya.whitelabel(&quot;VENDOR&quot;, &quot;MODEL&quot;, &quot;DESCRIPTION&quot;, [&quot;MANUFACTURER_NAME&quot;])</code><ul><li><code>VENDOR</code>: The vendor of the device, if you don&#39;t know use <code>Tuya</code> here.</li><li><code>MODEL</code>: The model number written on the device or product page</li><li><code>DESCRIPTION</code>: A description of the device</li><li><code>MANUFACTURER_NAME</code>: Can be retrieved from the frontend -&gt; device -&gt; about page -&gt; below <em>Zigbee Model</em>, e.g. <code>_TZ3000_cphmq0q7</code> or <code>_TZE200_eegnwoyw</code>.</li></ul></li>',4)),(0,s.Lk)("li",null,[e[16]||(e[16]=(0,s.eW)("Commit changes and ",-1)),(0,s.bF)(a,{to:"/advanced/support-new-devices/01_support_new_devices.html#_4-create-a-pull-request"},{default:(0,s.k6)(()=>[...e[15]||(e[15]=[(0,s.eW)("Create a pull request",-1)])]),_:1})]),(0,s.Lk)("li",null,[e[18]||(e[18]=(0,s.eW)("Submit a picture for the docs (",-1)),(0,s.bF)(a,{to:"/advanced/support-new-devices/01_support_new_devices.html#_5-add-device-picture-to-zigbee2mqttio-documentation"},{default:(0,s.k6)(()=>[...e[17]||(e[17]=[(0,s.eW)("guide",-1)])]),_:1}),e[19]||(e[19]=(0,s.eW)(")",-1))])])])}]]),o=JSON.parse('{"path":"/advanced/support-new-devices/02_support_new_tuya_devices.html","title":"Support new Tuya devices","lang":"en-US","frontmatter":{"pageClass":"content-page"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"advanced/support-new-devices/02_support_new_tuya_devices.md"}')}}]);