"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[41549],{10321:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>n,data:()=>d});var a=t(60362);const c={},n=(0,t(60654).A)(c,[["render",function(e,o){const t=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[o[8]||(o[8]=(0,a.Lk)("h1",{id:"bacchus-presence-sensor-v2",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#bacchus-presence-sensor-v2"},[(0,a.Lk)("span",null,"Bacchus Presence_Sensor_v2")])],-1)),(0,a.Lk)("table",null,[o[6]||(o[6]=(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th"),(0,a.Lk)("th")])],-1)),(0,a.Lk)("tbody",null,[o[2]||(o[2]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Model"),(0,a.Lk)("td",null,"Presence_Sensor_v2")],-1)),(0,a.Lk)("tr",null,[o[1]||(o[1]=(0,a.Lk)("td",null,"Vendor",-1)),(0,a.Lk)("td",null,[(0,a.bF)(t,{to:"/supported-devices/#v=Bacchus"},{default:(0,a.k6)(()=>[...o[0]||(o[0]=[(0,a.eW)("Bacchus",-1)])]),_:1})])]),o[3]||(o[3]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Description"),(0,a.Lk)("td",null,"Bacchus presence sensor with illuminance")],-1)),o[4]||(o[4]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Exposes"),(0,a.Lk)("td",null,"occupancy, illuminance, local_time, led_mode, illuminance_threshold, min_time, max_time, sensor, day_output, night_output")],-1)),o[5]||(o[5]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Picture"),(0,a.Lk)("td",null,[(0,a.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/Presence_Sensor_v2.png",alt:"Bacchus Presence_Sensor_v2"})])],-1))])]),o[9]||(o[9]=(0,a.Lk)("p",null,[(0,a.Lk)("a",{href:"https://github.com/Bacchus777/Presence-Sensor-v2/",target:"_blank",rel:"noopener noreferrer"},"Original project description")],-1)),o[10]||(o[10]=(0,a.Lk)("h2",{id:"options",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#options"},[(0,a.Lk)("span",null,"Options")])],-1)),(0,a.Lk)("p",null,[(0,a.Lk)("em",null,[(0,a.bF)(t,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,a.k6)(()=>[...o[7]||(o[7]=[(0,a.eW)("How to use device type specific configuration",-1)])]),_:1})])]),o[11]||(o[11]=(0,a.Fv)('<ul><li><p><code>illuminance_calibration</code>: Calibrates the illuminance value (percentual offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>no_occupancy_since</code>: Sends a message after the last time no occupancy (occupancy: false) was detected. When setting this for example to [10, 60] a <code>{&quot;no_occupancy_since&quot;: 10}</code> will be send after 10 seconds and a <code>{&quot;no_occupancy_since&quot;: 60}</code> after 60 seconds. The value must be a list of [object Object].</p></li><li><p><code>illuminance_raw</code>: Expose the raw illuminance value. The value must be <code>true</code> or <code>false</code></p></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="occupancy-binary-1-endpoint" tabindex="-1"><a class="header-anchor" href="#occupancy-binary-1-endpoint"><span>Occupancy (binary, 1 endpoint)</span></a></h3><p>Indicates whether the device detected occupancy. Value can be found in the published state on the <code>occupancy_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupancy_1&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. If value equals <code>true</code> occupancy is ON, if <code>false</code> OFF.</p><h3 id="illuminance-numeric" tabindex="-1"><a class="header-anchor" href="#illuminance-numeric"><span>Illuminance (numeric)</span></a></h3><p>Measured illuminance. Value can be found in the published state on the <code>illuminance</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;illuminance&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The unit of this value is <code>lx</code>.</p><h3 id="local-time-text" tabindex="-1"><a class="header-anchor" href="#local-time-text"><span>Local time (text)</span></a></h3><p>Local time. Value can be found in the published state on the <code>local_time</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_time&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value.</p><h3 id="led-mode-enum-3-endpoint" tabindex="-1"><a class="header-anchor" href="#led-mode-enum-3-endpoint"><span>Led mode (enum, 3 endpoint)</span></a></h3><p>Led working mode. Value can be found in the published state on the <code>led_mode_3</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;led_mode_3&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;led_mode_3&quot;: NEW_VALUE}</code>. The possible values are: <code>Always</code>, <code>Never</code>, <code>Night</code>.</p><h3 id="illuminance-threshold-numeric" tabindex="-1"><a class="header-anchor" href="#illuminance-threshold-numeric"><span>Illuminance threshold (numeric)</span></a></h3><p>Illuminance threshold. Value can be found in the published state on the <code>illuminance_threshold</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;illuminance_threshold&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;illuminance_threshold&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>50000</code>. The unit of this value is <code>raw</code>.</p><h3 id="min-time-text" tabindex="-1"><a class="header-anchor" href="#min-time-text"><span>Min time (text)</span></a></h3><p>Day start. Value can be found in the published state on the <code>min_time</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_time&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_time&quot;: NEW_VALUE}</code>.</p><h3 id="max-time-text" tabindex="-1"><a class="header-anchor" href="#max-time-text"><span>Max time (text)</span></a></h3><p>Day end. Value can be found in the published state on the <code>max_time</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_time&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_time&quot;: NEW_VALUE}</code>.</p><h3 id="sensor-binary-1-endpoint" tabindex="-1"><a class="header-anchor" href="#sensor-binary-1-endpoint"><span>Sensor (binary, 1 endpoint)</span></a></h3><p>Enable sensor. Value can be found in the published state on the <code>sensor_1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;sensor_1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;sensor_1&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> sensor is ON, if <code>OFF</code> OFF.</p><h3 id="day-output-binary-2-endpoint" tabindex="-1"><a class="header-anchor" href="#day-output-binary-2-endpoint"><span>Day output (binary, 2 endpoint)</span></a></h3><p>Day binding output. Value can be found in the published state on the <code>day_output_2</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>ON</code> day output is ON, if <code>OFF</code> OFF.</p><h3 id="night-output-binary-3-endpoint" tabindex="-1"><a class="header-anchor" href="#night-output-binary-3-endpoint"><span>Night output (binary, 3 endpoint)</span></a></h3><p>Night binding output. Value can be found in the published state on the <code>night_output_3</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>ON</code> night output is ON, if <code>OFF</code> OFF.</p>',22))])}]]),d=JSON.parse('{"path":"/devices/Presence_Sensor_v2.html","title":"Bacchus Presence_Sensor_v2 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Bacchus Presence_Sensor_v2 control via MQTT","description":"Integrate your Bacchus Presence_Sensor_v2 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-05-01T17:56:31.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/Presence_Sensor_v2.md"}')}}]);