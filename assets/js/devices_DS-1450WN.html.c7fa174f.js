"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[44347],{9581:(e,t,o)=>{o.r(t),o.d(t,{comp:()=>d,data:()=>i});var a=o(60362);const c={},d=(0,o(60654).A)(c,[["render",function(e,t){const o=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[t[8]||(t[8]=(0,a.Lk)("h1",{id:"tuya-ds-1450wn",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#tuya-ds-1450wn"},[(0,a.Lk)("span",null,"Tuya DS-1450WN")])],-1)),(0,a.Lk)("table",null,[t[6]||(t[6]=(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th"),(0,a.Lk)("th")])],-1)),(0,a.Lk)("tbody",null,[t[2]||(t[2]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Model"),(0,a.Lk)("td",null,"DS-1450WN")],-1)),(0,a.Lk)("tr",null,[t[1]||(t[1]=(0,a.Lk)("td",null,"Vendor",-1)),(0,a.Lk)("td",null,[(0,a.bF)(o,{to:"/supported-devices/#v=Tuya"},{default:(0,a.k6)(()=>[...t[0]||(t[0]=[(0,a.eW)("Tuya",-1)])]),_:1})])]),t[3]||(t[3]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Description"),(0,a.Lk)("td",null,"Smart Zigbee Switch with power monitoring")],-1)),t[4]||(t[4]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Exposes"),(0,a.Lk)("td",null,"switch (state), countdown_usb_a, countdown_usb_c, countdown_plug_1, countdown_plug_2, relay_status, switch_backlight, current, power, voltage, produced_energy, child_lock")],-1)),t[5]||(t[5]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Picture"),(0,a.Lk)("td",null,[(0,a.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/DS-1450WN.png",alt:"Tuya DS-1450WN"})])],-1))])]),t[9]||(t[9]=(0,a.Lk)("h2",{id:"options",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#options"},[(0,a.Lk)("span",null,"Options")])],-1)),(0,a.Lk)("p",null,[(0,a.Lk)("em",null,[(0,a.bF)(o,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,a.k6)(()=>[...t[7]||(t[7]=[(0,a.eW)("How to use device type specific configuration",-1)])]),_:1})])]),t[10]||(t[10]=(0,a.Fv)('<ul><li><p><code>current_calibration</code>: Calibrates the current value (percentual offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>current_precision</code>: Number of digits after decimal point for current, takes into effect on next report of device. This option can only decrease the precision, not increase it. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li><li><p><code>power_calibration</code>: Calibrates the power value (percentual offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>power_precision</code>: Number of digits after decimal point for power, takes into effect on next report of device. This option can only decrease the precision, not increase it. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li><li><p><code>voltage_calibration</code>: Calibrates the voltage value (percentual offset), takes into effect on next report of device. The value must be a number.</p></li><li><p><code>voltage_precision</code>: Number of digits after decimal point for voltage, takes into effect on next report of device. This option can only decrease the precision, not increase it. The value must be a number with a minimum value of <code>0</code> and with a with a maximum value of <code>3</code></p></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="switch-usb-a-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-usb-a-endpoint"><span>Switch (usb_a endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_usb_a</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_usb_a&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_usb_a&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_usb_a&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state_usb_a&quot;: &quot;&quot;}</code>.</p><h3 id="switch-usb-c-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-usb-c-endpoint"><span>Switch (usb_c endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_usb_c</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_usb_c&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_usb_c&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_usb_c&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state_usb_c&quot;: &quot;&quot;}</code>.</p><h3 id="switch-plug-1-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-plug-1-endpoint"><span>Switch (plug_1 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_plug_1</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_plug_1&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_plug_1&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_plug_1&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state_plug_1&quot;: &quot;&quot;}</code>.</p><h3 id="switch-plug-2-endpoint" tabindex="-1"><a class="header-anchor" href="#switch-plug-2-endpoint"><span>Switch (plug_2 endpoint)</span></a></h3><p>The current state of this switch is in the published state under the <code>state_plug_2</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state_plug_2&quot;: &quot;ON&quot;}</code>, <code>{&quot;state_plug_2&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state_plug_2&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state_plug_2&quot;: &quot;&quot;}</code>.</p><h3 id="usb-a-countdown-numeric" tabindex="-1"><a class="header-anchor" href="#usb-a-countdown-numeric"><span>USB A Countdown (numeric)</span></a></h3><p>Countdown timer for USB A. Value can be found in the published state on the <code>countdown_usb_a</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;countdown_usb_a&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>86400</code>. The unit of this value is <code>s</code>.</p><h3 id="usb-c-countdown-numeric" tabindex="-1"><a class="header-anchor" href="#usb-c-countdown-numeric"><span>USB C Countdown (numeric)</span></a></h3><p>Countdown timer for USB C. Value can be found in the published state on the <code>countdown_usb_c</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;countdown_usb_c&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>86400</code>. The unit of this value is <code>s</code>.</p><h3 id="plug-1-countdown-numeric" tabindex="-1"><a class="header-anchor" href="#plug-1-countdown-numeric"><span>Plug 1 Countdown (numeric)</span></a></h3><p>Countdown timer for Plug 1. Value can be found in the published state on the <code>countdown_plug_1</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;countdown_plug_1&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>86400</code>. The unit of this value is <code>s</code>.</p><h3 id="plug-2-countdown-numeric" tabindex="-1"><a class="header-anchor" href="#plug-2-countdown-numeric"><span>Plug 2 Countdown (numeric)</span></a></h3><p>Countdown timer for Plug 2. Value can be found in the published state on the <code>countdown_plug_2</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;countdown_plug_2&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>86400</code>. The unit of this value is <code>s</code>.</p><h3 id="relay-status-enum" tabindex="-1"><a class="header-anchor" href="#relay-status-enum"><span>Relay Status (enum)</span></a></h3><p>Set the Relay Status. Value can be found in the published state on the <code>relay_status</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;relay_status&quot;: NEW_VALUE}</code>. The possible values are: <code>memory</code>, <code>on</code>, <code>off</code>.</p><h3 id="switch-backlight-binary" tabindex="-1"><a class="header-anchor" href="#switch-backlight-binary"><span>Switch Backlight (binary)</span></a></h3><p>Enables/disables backlight indicator. Value can be found in the published state on the <code>switch_backlight</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;switch_backlight&quot;: NEW_VALUE}</code>. If value equals <code>ON</code> switch Backlight is ON, if <code>OFF</code> OFF.</p><h3 id="current-numeric" tabindex="-1"><a class="header-anchor" href="#current-numeric"><span>Current (numeric)</span></a></h3><p>Instantaneous measured electrical current. Value can be found in the published state on the <code>current</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>A</code>.</p><h3 id="power-numeric" tabindex="-1"><a class="header-anchor" href="#power-numeric"><span>Power (numeric)</span></a></h3><p>Instantaneous measured power. Value can be found in the published state on the <code>power</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>W</code>.</p><h3 id="voltage-numeric" tabindex="-1"><a class="header-anchor" href="#voltage-numeric"><span>Voltage (numeric)</span></a></h3><p>Measured electrical potential value. Value can be found in the published state on the <code>voltage</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>V</code>.</p><h3 id="produced-energy-numeric" tabindex="-1"><a class="header-anchor" href="#produced-energy-numeric"><span>Produced energy (numeric)</span></a></h3><p>Sum of produced energy. Value can be found in the published state on the <code>produced_energy</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>kWh</code>.</p><h3 id="child-lock-binary" tabindex="-1"><a class="header-anchor" href="#child-lock-binary"><span>Child lock (binary)</span></a></h3><p>Enables/disables physical input on the device. Value can be found in the published state on the <code>child_lock</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;child_lock&quot;: NEW_VALUE}</code>. If value equals <code>LOCK</code> child lock is ON, if <code>UNLOCK</code> OFF.</p>',32))])}]]),i=JSON.parse('{"path":"/devices/DS-1450WN.html","title":"Tuya DS-1450WN control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Tuya DS-1450WN control via MQTT","description":"Integrate your Tuya DS-1450WN via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-10-31T19:12:27.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/DS-1450WN.md"}')}}]);