"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[36632],{85269:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>o,data:()=>d});var n=a(60362);const i={},o=(0,a(60654).A)(i,[["render",function(e,t){const a=(0,n.g2)("RouteLink");return(0,n.uX)(),(0,n.CE)("div",null,[t[10]||(t[10]=(0,n.Lk)("h1",{id:"third-reality-3rdts01056z",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#third-reality-3rdts01056z"},[(0,n.Lk)("span",null,"Third Reality 3RDTS01056Z")])],-1)),(0,n.Lk)("table",null,[t[6]||(t[6]=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th"),(0,n.Lk)("th")])],-1)),(0,n.Lk)("tbody",null,[t[2]||(t[2]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Model"),(0,n.Lk)("td",null,"3RDTS01056Z")],-1)),(0,n.Lk)("tr",null,[t[1]||(t[1]=(0,n.Lk)("td",null,"Vendor",-1)),(0,n.Lk)("td",null,[(0,n.bF)(a,{to:"/supported-devices/#v=Third%20Reality"},{default:(0,n.k6)(()=>[...t[0]||(t[0]=[(0,n.eW)("Third Reality",-1)])]),_:1})])]),t[3]||(t[3]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Description"),(0,n.Lk)("td",null,"Garage door tilt sensor")],-1)),t[4]||(t[4]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Exposes"),(0,n.Lk)("td",null,"battery, contact, battery_low")],-1)),t[5]||(t[5]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Picture"),(0,n.Lk)("td",null,[(0,n.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/3RDTS01056Z.png",alt:"Third Reality 3RDTS01056Z"})])],-1))])]),t[11]||(t[11]=(0,n.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h3 id="opening-unit" tabindex="-1"><a class="header-anchor" href="#opening-unit"><span>Opening Unit</span></a></h3><p>Unit slides up off of base.</p><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><p>Press and hold the reset button for 5 seconds to factory reset the sensor, the LED light will turn red and flash in blue, indicating entering Zigbee pairing mode. It will exit Zigbee pairing mode after 3 min if not paired.</p><h3 id="battery" tabindex="-1"><a class="header-anchor" href="#battery"><span>Battery</span></a></h3><p>Uses two AAA batteries.</p><h2 id="ota-updates" tabindex="-1"><a class="header-anchor" href="#ota-updates"><span>OTA updates</span></a></h2>',8)),(0,n.Lk)("p",null,[t[8]||(t[8]=(0,n.eW)("This device supports OTA updates, for more information see ",-1)),(0,n.bF)(a,{to:"/guide/usage/ota_updates.html"},{default:(0,n.k6)(()=>[...t[7]||(t[7]=[(0,n.eW)("OTA updates",-1)])]),_:1}),t[9]||(t[9]=(0,n.eW)(".",-1))]),t[12]||(t[12]=(0,n.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;battery&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="contact-binary" tabindex="-1"><a class="header-anchor" href="#contact-binary"><span>Contact (binary)</span></a></h3><p>Indicates whether the device is opened or closed. Value can be found in the published state on the <code>contact</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>false</code> contact is ON, if <code>true</code> OFF.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Indicates whether the battery of the device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p>',7))])}]]),d=JSON.parse('{"path":"/devices/3RDTS01056Z.html","title":"Third Reality 3RDTS01056Z control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Third Reality 3RDTS01056Z control via MQTT","description":"Integrate your Third Reality 3RDTS01056Z via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2024-04-29T19:24:38.000Z"},"git":{"updatedTime":1762029806000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"65fac821d7d53a7e50cd38541621bbb5ac5d9dd0","time":1762029806000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Update zhc to 25.59.0"}]},"filePathRelative":"devices/3RDTS01056Z.md"}')}}]);